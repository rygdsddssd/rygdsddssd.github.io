<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2023.6大纲</title>
    <url>/2023/06/23/2023.6%E5%A4%A7%E7%BA%B2/</url>
    <content><![CDATA[<h2 id="2023-6大纲"><a href="#2023-6大纲" class="headerlink" title="2023.6大纲"></a>2023.6大纲</h2><p>上一篇博客是5.26日的居然已经是一个月前:fearful:！</p>
<p>这段事件实在是<del>比较懒</del>**比较忙 **，没什么时间来写博客，后续会用空余时间把这段时间的一些收获整理一下写出来。不过过段时间又要考试，所以可能也没那么快。</p>
<p>这里列一下大纲吧</p>
<hr>
<p>日常：</p>
<ul>
<li><p>去襄阳玩</p>
</li>
<li><p>6.1 天空之城电影</p>
</li>
<li><p>6.4天空之城音乐会</p>
</li>
<li><p>6.18 看电影+江汉大学打球</p>
</li>
<li><p>6.19 看常静、张笛旷野之声音乐会、认识了个朋友</p>
</li>
</ul>
<hr>
<p>学习：</p>
<ul>
<li>数模、SPSS<ul>
<li>回归分析</li>
</ul>
</li>
<li>地图学</li>
<li>python爬虫</li>
</ul>
<p>可恶啊，今天端午，没吃上粽子，这个月出去玩太多了，生活费都快没了</p>
]]></content>
      <categories>
        <category>essay</category>
      </categories>
      <tags>
        <tag>essay</tag>
      </tags>
  </entry>
  <entry>
    <title>Apriori算法</title>
    <url>/2023/05/06/Apriori%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="Apriori算法"><a href="#Apriori算法" class="headerlink" title="Apriori算法"></a>Apriori算法</h1><details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>不同语言的实现 </summary>
              <div class='content'>
              <p><a class="button  regular" href='https://blog.csdn.net/weixin_45685353/article/details/106906416' title='【CSDN】Java实现Apriori算法'><i class='fa-solid fa-c'></i> 【CSDN】Java实现Apriori算法</a></p><p><a class="button  regular" href='https://blog.csdn.net/reshuibing/article/details/88648215' title='【CSDN】Python实现Apriori算法'><i class='fa-solid fa-c'></i> 【CSDN】Python实现Apriori算法</a></p><p><a class="button  regular" href='https://blog.csdn.net/weixin_44471080/article/details/102646913' title='【CSDN】C实现Apriori算法'><i class='fa-solid fa-c'></i> 【CSDN】C实现Apriori算法</a></p><p>感谢这些作者</p>
              </div>
            </details>





<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a class="link"   href="https://so.csdn.net/so/search?q=Apriori%E7%AE%97%E6%B3%95&spm=1001.2101.3001.7020" >Apriori算法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>是第一个关联规则挖掘算法，也是最经典的算法。它利用逐层搜索的迭代方法找出数据库中项集的关系，以形成规则，其过程由连接（类矩阵运算）与剪枝（去掉那些没必要的中间结果）组成。该算法中项集的概念即为项的集合。包含K个项的集合为k项集。项集出现的频率是包含项集的事务数，称为项集的频率。如果某项集满足最小支持度，则称它为频繁项集。</p>
<h2 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h2><p>首先扫描数据库中所需要进行分析的数据，在设置完支持度以及置信度以后，在最小支持度的支持下产生频繁项，即统计所有项目集中包含一个或一个以上的元素频数，找出大于或者等于设置的支持度的项目集。其次就是频繁项的自连接。再者是如果对频繁项自连接以后的项的子集如果不是频繁项的话，则进行剪枝处理。接着对频繁项处理后产生候选项。最后循环<br>调用产生频繁项集。</p>
<h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><h3 id="支持度"><a href="#支持度" class="headerlink" title="支持度"></a>支持度</h3><p> 支持度就是几个关联的数据在数据集中出现的次数占总数据集的比重。或者说几个数据关联出现的概率。</p>
<h3 id="置信度"><a href="#置信度" class="headerlink" title="置信度"></a>置信度</h3><p>置信度体现了一个数据出现后，另一个数据出现的概率，或者说数据的条件概率。</p>
<h3 id="最小支持度"><a href="#最小支持度" class="headerlink" title="最小支持度"></a>最小支持度</h3><p><em>用户或专家</em> 定义的衡量支持度的一个阈值，表示项目集在统计意义上的最低重要性；</p>
<h3 id="最小置信度"><a href="#最小置信度" class="headerlink" title="最小置信度"></a>最小置信度</h3><p><em>用户或专家</em> 定义的衡量置信度的一个阈值，表示关联规则的最低可靠性。</p>
<p>同时满足最小支持度阈值和最小置信度阈值的规则称作强规则。</p>
<h3 id="强规则"><a href="#强规则" class="headerlink" title="强规则"></a>强规则</h3><p>同时满足最小支持度阈值和最小置信度阈值的规则</p>
<h3 id="项集"><a href="#项集" class="headerlink" title="项集"></a>项集</h3><ul>
<li><p>项集是项的集合。包含 k 个项的项集称为 k 项集，如集合   {牛奶，麦片，糖}是一个3项集。</p>
</li>
<li><p>项集的出现频率是所有包含项集的事务计数，又称作绝对支持度或支持度计数。如果项集 I 的相对支持度满足预定义的最小支持度阈值，则 I 是频繁项集。频繁k项集通常记作Lk。</p>
</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>感觉以后是有可能再用上的，所以我直接将这个算法写成了工具类(第一次造轮子hhhh)</p>
<h3 id="Apriori"><a href="#Apriori" class="headerlink" title="Apriori"></a>Apriori</h3><p>我感觉我的注释已经写得很详细了，不做赘述直接看代码吧，有问题可以评论或联系我。</p>
<p>唯二比较生僻的方法</p>
<a class="button  regular" href='https://www.runoob.com/java/java-hashmap-getordefault.html' title='【菜鸟教程 (runoob.com)】 HashMap getOrDefault() 方法'><i class='fa-solid fa-code'></i> 【菜鸟教程 (runoob.com)】 HashMap getOrDefault() 方法</a>

<a class="button  regular" href='https://blog.csdn.net/qq_31635851/article/details/120324130' title='【CSDN】Comparator.naturalOrder | 自然排序_猫巳的博客-CSDN博客'><i class='fa-solid fa-c'></i> 【CSDN】Comparator.naturalOrder | 自然排序_猫巳的博客-CSDN博客</a>



<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//author:rygdsddssd</span></span><br><span class="line"><span class="comment">//date:2023.5</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Apriori</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这样做是为了可调阈值，以及让这次作业直接变成我的一个轮子</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">SUPPORT</span> <span class="operator">=</span> <span class="number">2</span>; <span class="comment">// 支持度阈值</span></span><br><span class="line">    <span class="type">double</span> <span class="variable">CONFIDENCE</span> <span class="operator">=</span> <span class="number">0.8</span>; <span class="comment">// 置信度阈值</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">ITEM_SPLIT</span> <span class="operator">=</span> <span class="string">&quot;,&quot;</span>; <span class="comment">// 项的分隔符</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">RULE_SPLIT</span> <span class="operator">=</span> <span class="string">&quot;-&gt;&quot;</span>; <span class="comment">// 项的分隔符</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//频繁集：frequentCollectionMap ---&gt; list(k项集)-int(出现次数)</span></span><br><span class="line">    <span class="comment">//注意这里List是key,Integer是value哦</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所有的频繁集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;List&lt;String&gt;,Integer&gt; frequentCollectionMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 存放处理完的原始数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;String[]&gt; Data;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1项集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;List&lt;String&gt;,Integer&gt; F1C;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 候选集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;List&lt;String&gt;,Integer&gt; candidateCollection= <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关联规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Double&gt; relationRules;</span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Apriori</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Apriori</span><span class="params">(<span class="type">int</span> SUPPORT, <span class="type">double</span> CONFIDENCE, String ITEM_SPLIT,String RULE_SPLIT)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.SUPPORT = SUPPORT;</span><br><span class="line">        <span class="built_in">this</span>.CONFIDENCE = CONFIDENCE;</span><br><span class="line">        <span class="built_in">this</span>.ITEM_SPLIT = ITEM_SPLIT;</span><br><span class="line">        <span class="built_in">this</span>.RULE_SPLIT = RULE_SPLIT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Apriori&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;SUPPORT=&quot;</span> + SUPPORT +</span><br><span class="line">                <span class="string">&quot;, CONFIDENCE=&quot;</span> + CONFIDENCE +</span><br><span class="line">                <span class="string">&quot;, ITEM_SPLIT=&quot;</span> + ITEM_SPLIT +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 剔除无效数据的Data</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span>  List&lt;String[]&gt; Read(String fileName,<span class="type">int</span> index)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===========================================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;读取数据&quot;</span>);</span><br><span class="line">        Data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//在类里加了一个private的Data，只要读取一次就到Data里了</span></span><br><span class="line"><span class="comment">//        //读取文件放入cells中</span></span><br><span class="line"><span class="comment">//        List&lt;String[]&gt; cells = new ArrayList&lt;&gt;();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 reader</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            fis = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">            <span class="type">InputStreamReader</span> <span class="variable">isr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(fis,<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(isr);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 按行读取</span></span><br><span class="line">            String line;</span><br><span class="line">            line = br.readLine();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(line!=<span class="literal">null</span>)&#123;</span><br><span class="line">                System.out.println(line);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//数据处理</span></span><br><span class="line">            <span class="comment">//把读取的不规范数据处理成模范数据modData</span></span><br><span class="line">            <span class="keyword">while</span> ((line = br.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">// 分割                // CSV文件的分隔符: ITEM_SPLIT</span></span><br><span class="line"></span><br><span class="line">                String[] columns = line.split(ITEM_SPLIT);<span class="comment">// CSV文件的分隔符: ITEM_SPLIT</span></span><br><span class="line">                String[] modData;</span><br><span class="line">                <span class="keyword">if</span>(index!=<span class="number">0</span>)&#123;</span><br><span class="line">                    modData = <span class="keyword">new</span> <span class="title class_">String</span>[columns.length-index];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; modData.length; i++) &#123;</span><br><span class="line">                        modData[i]=columns[i+<span class="number">1</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    modData = columns;</span><br><span class="line">                &#125;</span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                    //这里不能直接判断 columns[2] == &quot;yes&quot; 哦</span></span><br><span class="line"><span class="comment">                    if(modData[1].equals(&quot;yes&quot;))&#123;</span></span><br><span class="line"><span class="comment">                        modData[1] = &quot;true&quot;;</span></span><br><span class="line"><span class="comment">                    &#125;else&#123;</span></span><br><span class="line"><span class="comment">                        modData[1] = &quot;false&quot;;</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                    */</span></span><br><span class="line"></span><br><span class="line">                Data.add(modData);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;读取完毕&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;===========================================&quot;</span>);</span><br><span class="line">            br.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *获取频繁集</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 所有1-k项频繁集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;List&lt;String&gt;,Integer&gt; <span class="title function_">getFrequentCollectionMap</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;生成频繁集ing...&quot;</span>);</span><br><span class="line">        <span class="comment">//frequentCollectionMap需要合并F1C以及各个FkC</span></span><br><span class="line">        Map&lt;List&lt;String&gt;,Integer&gt; F1C = getFrequent1ItemCollections();</span><br><span class="line">        frequentCollectionMap.putAll(F1C);</span><br><span class="line"></span><br><span class="line">        Map&lt;List&lt;String&gt;,Integer&gt; FkC = F1C;</span><br><span class="line">        <span class="comment">//已经获取过1项,-1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; Data.get(<span class="number">0</span>).length - <span class="number">1</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取k+1项候选频繁集</span></span><br><span class="line">            getFrequentMoreOneItemCandidateCollections(FkC);</span><br><span class="line">            FkC.clear();</span><br><span class="line">            <span class="comment">//处理候选集</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//计数</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//对于每一个候选项,都要查找一遍Data计数</span></span><br><span class="line">            <span class="keyword">for</span> (List&lt;String&gt; cC : candidateCollection.keySet()) &#123;</span><br><span class="line">                <span class="comment">//对于每条data，必须包含所有候选项的元素才能计数+1</span></span><br><span class="line">                <span class="keyword">for</span> (String[] dataItem : Data) &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//每个候选项中的元素都要被包含于dataItem</span></span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">flag1</span> <span class="operator">=</span> <span class="literal">true</span>;<span class="comment">//true-&gt;候选项是dataItem的子集</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> (String s1 : cC) &#123;</span><br><span class="line">                        <span class="type">boolean</span> <span class="variable">flag2</span> <span class="operator">=</span> <span class="literal">false</span>;<span class="comment">//true-&gt;候选项元素是dataItem的子集</span></span><br><span class="line">                        <span class="comment">//只要有一个相等，说明当前候选项元素是dataItem的子集</span></span><br><span class="line">                        <span class="keyword">for</span> (String s2 : dataItem) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(s2.equals(s1))&#123;</span><br><span class="line">                                flag2 = <span class="literal">true</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//只要有一个候选项元素不是子集，那这个候选项不是子集</span></span><br><span class="line">                        <span class="keyword">if</span>(flag2 == <span class="literal">false</span>)&#123;</span><br><span class="line">                            flag1 = <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(flag1)&#123;</span><br><span class="line">                        candidateCollection.put(cC,candidateCollection.get(cC)+<span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//筛选</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (List&lt;String&gt; stringList : candidateCollection.keySet()) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">fc</span> <span class="operator">=</span> candidateCollection.get(stringList);</span><br><span class="line">                <span class="keyword">if</span>(fc&gt;=SUPPORT)&#123;</span><br><span class="line">                    FkC.put(stringList,fc);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            frequentCollectionMap.putAll(FkC);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//最后return所有的频繁集</span></span><br><span class="line">        <span class="keyword">return</span> frequentCollectionMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取频繁1项集</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> F1C</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;List&lt;String&gt;,Integer&gt; <span class="title function_">getFrequent1ItemCollections</span><span class="params">()</span>&#123;</span><br><span class="line">        Map&lt;List&lt;String&gt;,Integer&gt; tempF1C = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        F1C = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//获取1项集</span></span><br><span class="line">        <span class="comment">//遍历Data</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; Data.size(); i++) &#123;</span><br><span class="line">        String[] row = Data.get(i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; row.length; j++) &#123;</span><br><span class="line">                    List&lt;String&gt; tempL = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                    tempL.add(row[j]);</span><br><span class="line">                    <span class="comment">//如果row[j]不存在，默认设0，然后这里统计+1</span></span><br><span class="line">                <span class="comment">//自行搜索getOrDefault方法</span></span><br><span class="line">                    tempF1C.put(tempL, tempF1C.getOrDefault(tempL,<span class="number">0</span>)+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//                    F1C.put(tempL, F1C.get(row[j] + 1));</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//此时全部的1项集已经全部完成，接下来要按支持度阈值筛选</span></span><br><span class="line">        <span class="keyword">for</span> (List&lt;String&gt; stringList : tempF1C.keySet()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">fc</span> <span class="operator">=</span> tempF1C.get(stringList);</span><br><span class="line">            <span class="keyword">if</span>(fc&gt;=SUPPORT)&#123;</span><br><span class="line">                F1C.put(stringList,fc);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> F1C;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里重构了一下，刚才在犹豫要不要把获取频繁1项和k项写成private</span></span><br><span class="line">    <span class="comment">//想了想觉得毕竟这个类的命名是Apriori算法，那么这个即使是其他问题，也可能使用这个算法来获取频繁1项k项</span></span><br><span class="line">    <span class="comment">//所以逻辑上来说这个方法是应该开放的</span></span><br><span class="line">    <span class="comment">//然后就顺利成章的在类里添加了private F1C</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传入Data获取频繁1项集</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Data 不能有多余数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 频繁1项集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;List&lt;String&gt;,Integer&gt; <span class="title function_">getFrequent1ItemCollections</span><span class="params">(List&lt;String[]&gt; Data)</span>&#123;</span><br><span class="line">        Map&lt;List&lt;String&gt;,Integer&gt; tempF1C = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map&lt;List&lt;String&gt;,Integer&gt; F1C = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//获取1项集</span></span><br><span class="line">        <span class="comment">//遍历Data</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; Data.size(); i++) &#123;</span><br><span class="line">            String[] row = Data.get(i);</span><br><span class="line">            <span class="comment">//这里修改了哦，从0开始，也就意味着如果是外部数据要调用这个方法，Data里不能有多余数据</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; row.length; j++) &#123;</span><br><span class="line">                List&lt;String&gt; tempL = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                tempL.add(row[j]);</span><br><span class="line">                <span class="comment">//如果row[j]不存在，默认设0，然后这里统计+1</span></span><br><span class="line">                <span class="comment">//自行搜索getOrDefault方法</span></span><br><span class="line">                tempF1C.put(tempL, tempF1C.getOrDefault(tempL,<span class="number">0</span>)+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//                    F1C.put(tempL, F1C.get(row[j] + 1));</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//此时全部的1项集已经全部完成，接下来要按支持度阈值筛选</span></span><br><span class="line">        <span class="keyword">for</span> (List&lt;String&gt; stringList : tempF1C.keySet()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">fc</span> <span class="operator">=</span> tempF1C.get(stringList);</span><br><span class="line">            <span class="keyword">if</span>(fc&gt;=SUPPORT)&#123;</span><br><span class="line">                F1C.put(stringList,fc);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> F1C;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//为了安全，应该是private</span></span><br><span class="line">    <span class="comment">//又想了一下，如果私有，没有必要return</span></span><br><span class="line">    <span class="comment">//感觉不行，这个候选集实际上类似于一个缓存数据，没有必要创建私有成员变量，既然写了return，那么这个方法实际上就相当于把获取候选集的步骤封装了起来方便外部调用，那么他按理来说应该是一个public的</span></span><br><span class="line">    <span class="comment">//烦,就这样吧</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *有频繁k项集，获取频繁k+1项候选集</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> FkC 频繁k项集</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> k+1项候选集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;List&lt;String&gt;,Integer&gt; <span class="title function_">getFrequentMoreOneItemCandidateCollections</span><span class="params">(Map&lt;List&lt;String&gt;,Integer&gt; FkC)</span>&#123;</span><br><span class="line">        candidateCollection.clear();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//st1与st2都是k项，两个循环，链接成k+1项放入候选集</span></span><br><span class="line">        <span class="comment">//因为是直接从k项集中找的元素链接，所以也不需要再进行”剪枝“步了</span></span><br><span class="line">        Set&lt;List&lt;String&gt;&gt; st1 = FkC.keySet();</span><br><span class="line">        Set&lt;List&lt;String&gt;&gt; st2 = FkC.keySet();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//切k项集</span></span><br><span class="line">        <span class="keyword">for</span> (List&lt;String&gt; s1 : st1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (List&lt;String&gt; s2 : st2) &#123;</span><br><span class="line">                <span class="comment">//切k项</span></span><br><span class="line">                <span class="keyword">for</span> (String s : s2) &#123;</span><br><span class="line">                    <span class="comment">//k项中查项</span></span><br><span class="line">                    <span class="keyword">if</span>(!s1.contains(s))&#123;</span><br><span class="line">                        List&lt;String&gt; tempL = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(s1);</span><br><span class="line">                        tempL.add(s);</span><br><span class="line">                        <span class="comment">//排序</span></span><br><span class="line">                        tempL.sort(Comparator.naturalOrder());</span><br><span class="line">                        candidateCollection.put(tempL,<span class="number">0</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> candidateCollection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public Map&lt;List&lt;String&gt;,Double&gt; getRelationRules(Map&lt;List&lt;String&gt;,Integer&gt; frequentCollectionMap)&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        Map&lt;List&lt;String&gt;,Double&gt; relationRule = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        Map&lt;List&lt;String&gt;,Integer&gt; maxItemsFC = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        //最大k项频繁集</span></span><br><span class="line"><span class="comment">//        for (List&lt;String&gt; fc : frequentCollectionMap.keySet()) &#123;</span></span><br><span class="line"><span class="comment">//            if(fc.size()==Data.size())&#123;</span></span><br><span class="line"><span class="comment">//                maxItemsFC.put(fc,frequentCollectionMap.get(fc));</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        return relationRule;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据传入频繁集获得规则</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> frequentCollectionMap 全部频繁项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 关联规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String,Double&gt; <span class="title function_">getRelationRules</span><span class="params">(Map&lt;List&lt;String&gt;,Integer&gt; frequentCollectionMap)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;生成规则ing...&quot;</span>);</span><br><span class="line">        <span class="comment">//将频繁项的子集相互链接，计算置信度，筛选</span></span><br><span class="line">        relationRules=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (List&lt;String&gt; itmes : frequentCollectionMap.keySet())&#123;</span><br><span class="line">            <span class="keyword">if</span> (itmes.size()&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="type">double</span> <span class="variable">countAll</span> <span class="operator">=</span> frequentCollectionMap.get(itmes);</span><br><span class="line">                List&lt;List&lt;String&gt;&gt; result = getSubsets(itmes);<span class="comment">//获得itmes的所有非空子集</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (List&lt;String&gt; itemList : result)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (itemList.size() &lt; itmes.size())&#123;<span class="comment">//只处理真子集</span></span><br><span class="line"></span><br><span class="line">                        <span class="type">StringBuilder</span> <span class="variable">reasonStr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();<span class="comment">//前置</span></span><br><span class="line">                        <span class="type">StringBuilder</span> <span class="variable">resultStr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();<span class="comment">//结果</span></span><br><span class="line">                        <span class="keyword">for</span> (String item : itemList)&#123;</span><br><span class="line">                            reasonStr.append(ITEM_SPLIT).append(item);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span> (String item : itmes) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (!itemList.contains(item))&#123;</span><br><span class="line">                                resultStr.append(ITEM_SPLIT).append(item);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="type">double</span> <span class="variable">countReason</span> <span class="operator">=</span> frequentCollectionMap.get(itemList);</span><br><span class="line">                        <span class="type">double</span> <span class="variable">itemConfidence</span> <span class="operator">=</span> countAll / countReason;<span class="comment">//计算置信度</span></span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (itemConfidence &gt;= CONFIDENCE)&#123;</span><br><span class="line">                            <span class="type">String</span> <span class="variable">rule</span> <span class="operator">=</span> reasonStr.append(RULE_SPLIT).append(resultStr.substring(<span class="number">1</span>)).substring(<span class="number">1</span>);</span><br><span class="line">                            relationRules.put(rule,itemConfidence);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> relationRules;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印所有频繁项</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showFC</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===========================================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;所有频繁项&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(frequentCollectionMap == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;未创建！！！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(frequentCollectionMap.isEmpty())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前为空集！！！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (List&lt;String&gt; strings : frequentCollectionMap.keySet()) &#123;</span><br><span class="line">            System.out.println(strings +<span class="string">&quot;:&quot;</span>+ frequentCollectionMap.get(strings));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showRule</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===========================================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;关联规则&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(relationRules == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;未创建！！！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(relationRules.isEmpty())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前为空集！！！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (String strings : relationRules.keySet()) &#123;</span><br><span class="line">            System.out.println(strings +<span class="string">&quot;:&quot;</span>+ relationRules.get(strings));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印1项集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showF1C</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===========================================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;单项集&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(relationRules == <span class="literal">null</span> || relationRules.isEmpty())&#123;</span><br><span class="line">            getFrequent1ItemCollections();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (List&lt;String&gt; strings : F1C.keySet()) &#123;</span><br><span class="line">            System.out.println(strings +<span class="string">&quot;:&quot;</span>+ F1C.get(strings));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showData</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;===========================================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Data&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(Data == <span class="literal">null</span> || Data.isEmpty())&#123;</span><br><span class="line">            getFrequent1ItemCollections();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String[] strings : Data) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Row:&quot;</span> + Arrays.toString(strings));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造子集</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceSet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> sourceSet的所有非空子集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;List&lt;String&gt;&gt; <span class="title function_">getSubsets</span><span class="params">(List&lt;String&gt; sourceSet)</span>&#123;</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        result.add(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;sourceSet.size();i++)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> result.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j&lt;size;j++)&#123;</span><br><span class="line">                List&lt;String&gt; temp = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(result.get(j));</span><br><span class="line">                temp.add(sourceSet.get(i));</span><br><span class="line">                result.add(temp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result.subList(<span class="number">1</span>,result.size());<span class="comment">//去掉空集</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><p>我的这个例子文件就直接是中医证型关联规则.java</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> class 中医证型关联规则 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Apriori</span> <span class="variable">apriori</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Apriori</span>(<span class="number">2</span>,<span class="number">0.8</span>,<span class="string">&quot;,&quot;</span>,<span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">        apriori.Read(<span class="string">&quot;src/中医证型关联规则.csv&quot;</span>,<span class="number">0</span>);</span><br><span class="line">        apriori.getRelationRules(apriori.getFrequentCollectionMap());</span><br><span class="line">        apriori.showRule();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h3><p>原始数据图 931*7</p>
<p>(第一行是表头，格式不同则请自行重写Read方法)</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/Apriori%E7%AE%97%E6%B3%95/Data.png"
                     
                ></p>
<p>所有元素也必须是各异的，否则请自行替换。</p>
<p>作业数据中出现了这样的情况</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/Apriori%E7%AE%97%E6%B3%95/sameString.png"
                     
                ></p>
<p>可以看到周末和促销列都是(yes&#x2F;no),不进行处理显然会出现问题，我的处理方式就是直接在重写方法里读取数据时将某一列替换成不同字符了(见Apriori类103-110行)</p>
<p>理想的处理应该自动将每一列的数据读取种类自行分配特征值，不过我懒得写了。</p>
<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>数据量有点大，需要等一会儿的</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/Apriori%E7%AE%97%E6%B3%95/result.png"
                     
                ></p>
]]></content>
      <categories>
        <category>Activity</category>
        <category>数模</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>数据挖掘</tag>
      </tags>
  </entry>
  <entry>
    <title>学习计划</title>
    <url>/2023/03/10/FutureStudyStep/</url>
    <content><![CDATA[<div class="tabs" id="tab-plan"><ul class="nav-tabs"><li class="tab active"><a class="#plan-1">任务</a></li><li class="tab"><a class="#plan-2">目标</a></li><li class="tab"><a class="#plan-3">LifeLong</a></li></ul><div class="tab-content"><div class="tab-pane active" id="plan-1"><p><strong>主要是具体的事件</strong></p>
<ul>
<li><strong>复习</strong><ul>
<li>概率论</li>
<li>毛概</li>
<li>地图学</li>
</ul>
</li>
<li><del>spring</del>spring boot</li>
<li>gis开发<ul>
<li><strong>ArcGIS操作深入学习</strong></li>
<li>WebGIS概念初步认识</li>
</ul>
</li>
<li>数模<ul>
<li>matlab、spss</li>
</ul>
</li>
<li><strong>乐器</strong><ul>
<li>笛子<ul>
<li>秦川抒怀</li>
</ul>
</li>
<li>吉他<ul>
<li>放空</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<p>很远的短期</p>
<ul>
<li>萧</li>
<li>速写</li>
<li>mod</li>
<li><del>android开发</del></li>
</ul></div><div class="tab-pane" id="plan-2"><p><strong>更加抽象一些</strong></p>
<ul>
<li>编程<ul>
<li>java</li>
<li>go</li>
</ul>
</li>
<li>艺术<ul>
<li>器乐</li>
<li>美术</li>
</ul>
</li>
</ul></div><div class="tab-pane" id="plan-3"><p><strong>需要一直做的</strong></p>
<ul>
<li>总结经验，写博客</li>
<li>保持健康，开心</li>
<li>坚持思考，冷静</li>
</ul></div></div></div>]]></content>
      <tags>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>LINGO软件的初步使用及解读</title>
    <url>/2023/03/26/LINGO%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%A7%A3%E8%AF%BB/</url>
    <content><![CDATA[<p>早上八点上到中午十一点半，休息了5分钟，我要死了。——2023&#x2F;3&#x2F;26疲惫不堪的我</p>
<h2 id="例子：牛奶生产"><a href="#例子：牛奶生产" class="headerlink" title="例子：牛奶生产"></a>例子：牛奶生产</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/LINGO%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%A7%A3%E8%AF%BB/problem1.png"
                      alt="problem1"
                ><br>答案代码对照着一看就知道了<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/LINGO%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%A7%A3%E8%AF%BB/answer1.png"
                      alt="answer1"
                ></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">max=72*x1+64*x2;</span><br><span class="line">x1+x2&lt;50;</span><br><span class="line">12*x1+8*x2&lt;480+5;</span><br><span class="line">3*x1&lt;100;</span><br><span class="line">@GIN(x1);</span><br><span class="line">@gin(x2);</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/LINGO%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%A7%A3%E8%AF%BB/%E4%BB%8B%E7%BB%8D.png"
                      alt="介绍"
                ></p>
<h2 id="内容解读"><a href="#内容解读" class="headerlink" title="内容解读"></a>内容解读</h2> <details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>内容解读 </summary>
              <div class='content'>
              <div class="note-large gray"><div class="notel-title"><p>found</p></div><div class="notel-content"><p>表示全局最优解找到</p></div></div><div class="note-large gray"><div class="notel-title"><p>value</p></div><div class="notel-content"><p>表示最优目标值</p></div></div><div class="note-large gray"><div class="notel-title"><p>iterations</p></div><div class="notel-content"><p>表示用单纯行法进行了两次迭代</p></div></div><div class="note-large gray"><div class="notel-title"><p>Variable</p></div><div class="notel-content"><p>表示变量，运行结果中有两个变量为x1,x2</p></div></div><div class="note-large gray"><div class="notel-title"><p>Value</p></div><div class="notel-content"><p>给出最优解中个变量的值</p></div></div><div class="note-large gray"><div class="notel-title"><p>Cost</p></div><div class="notel-content"><p>与最优单纯形表中的检验数相差一个符号的数。<br>为了使某个变量在解中的数值增加一个单位，目标函数必须付出的代价（增加或减少Reduced Cost的值）</p></div></div><div class="note-large gray"><div class="notel-title"><p>Surplus</p></div><div class="notel-content"><p>表示接近等于的程度<br>在约束条件中是&lt;&#x3D;,叫做松弛变量<br>在约束条件中是&gt;&#x3D;,叫做过剩变量<br>在约束条件中是&#x3D;,值为0,该约束为一个紧约束（或有效约束）<br>如果一个约束条件错误，作为一个不可行约束，Slack or Surplus为负数<br>Slack or Surplus表示的是：约束离相等还差多少  </p></div></div><div class="note-large gray"><div class="notel-title"><p>Price</p></div><div class="notel-content"><p>“DUAL PRICE”<br>（对偶价格）<br>表示当对应约束有微小变动时，目标函数的变化率。输出结果中对应于每一个约束有一个对偶价格。<br>若其数值为p，表示对应约束中不等式右端项若增加1个单位，目示函数将增加p个单位（max型问题）。</p><div class="note blue 提示"><p>其实也就是求导</p></div>显然，如果在最优解处约束正好取等号（也就是“紧约束”，也称为有效约束或起作用约束），对偶价格值才可能不是0。对于非紧约束，DUAL PRICE的值为0，表示对应约束中不等式右端项的微小扰动不影响目标函数。有时，通过分析DUAL PRICE，也可对产生不可行问题的原因有所了解。<p>例如在本例中，c约束条件的Dual Price为1，表示2x1+x2&lt;&#x3D;600增加一个单位到2x1+x2&lt;&#x3D;601使目标值增加到-1(目标函数的Dual Price为-1)，则Objective value就变为799 </p></div></div>
              </div>
            </details>

<h2 id="选址问题"><a href="#选址问题" class="headerlink" title="选址问题"></a>选址问题</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/LINGO%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%A7%A3%E8%AF%BB/problem2.jpg"
                      alt="problem2"
                ></p>
<a class="button  center large" href='https://blog.csdn.net/denghls/article/details/126632426' title='lingo求解非线性规划问题3：选址问题'><i class='fa-solid fa-arrow-right'></i> lingo求解非线性规划问题3：选址问题</a>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/LINGO%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%A7%A3%E8%AF%BB/answer2.png"
                      alt="answer2"
                ></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line"> </span><br><span class="line">!创建矩阵;</span><br><span class="line">sets:</span><br><span class="line">liaochang/1..2/:x1,y1;</span><br><span class="line">gongdi/1..6/:a,b,d;</span><br><span class="line">zuobiao(gongdi,liaochang):x;</span><br><span class="line">endsets</span><br><span class="line"> </span><br><span class="line">!输入数据;</span><br><span class="line">data:</span><br><span class="line">a=1.25,8.75,0.5,5.75,3,7.25;</span><br><span class="line">b=1.25,0.75,4.75,5,6.5,7.25;</span><br><span class="line">d=3,5,4,7,6,11;</span><br><span class="line">enddata</span><br><span class="line"> </span><br><span class="line">!列出目标函数及表达式;</span><br><span class="line">min = @sum(zuobiao(i,j):x(i,j)*@sqrt((a(i)-x1(j))^2+(b(i)-y1(j))^2));</span><br><span class="line">@for(gongdi(i):@sum(liaochang(j):x(i,j))=d(i));</span><br><span class="line">@for(liaochang(j):@sum(gongdi(i):x(i,j))&lt;=20);</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure></div>
<h2 id="轰炸任务"><a href="#轰炸任务" class="headerlink" title="轰炸任务"></a>轰炸任务</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/LINGO%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%A7%A3%E8%AF%BB/problem3.png"
                      alt="problem3"
                ><br>对于这一道题，我先附上我一开始的解法:<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/LINGO%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%A7%A3%E8%AF%BB/answer3.png"
                      alt="answer3"
                ><br>这个做法是有问题的，虽然不是逻辑上的问题。<br>这是因为在这里目标函数”max”是一个非线性的</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">max=1-(0.9^x1*0.8^x2*0.85^x3*0.75^x4*0.92^x5*0.84^x6*0.88^x7*0.8^x8);</span><br></pre></td></tr></table></figure></div>
<p>而LINGO是用来求解线性规划问题的工具(也可以求解非线性规划，但不能保证得到全局最优解)<br>所以，</p>
<ul>
<li>要将目标函数改为线性问题<ul>
<li>使用log</li>
</ul>
</li>
<li>限制条件要将所有未知数放在式子左边</li>
</ul>
<p>修改后代码如下</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">min=x1*@log(0.9)+x2*@log(0.8)+x3*@log(0.85)+x4*@log(0.75)+x5*@log(0.92)+x6*@log(0.84)+x7*@log(0.88)+x8*@log(0.8);</span><br><span class="line"></span><br><span class="line">(x1*450+x2*480+x3*540+x4*600)/2+(x5*450+x6*480+x7*540+x8*600)/3+((x1+x5)*450+(x2+x6)*480+(x3+x7)*540+(x4+x8)*600)/4+(x1+x2+x3+x4+x5+x6+x7+x8)*200&lt;48000;</span><br><span class="line">x1+x2+x3+x4&lt;48;</span><br><span class="line">x5+x6+x7+x8&lt;32;</span><br><span class="line">@gin(x1);@gin(x2);@gin(x3);@gin(x4);</span><br><span class="line">@gin(x5);@gin(x6);@gin(x7);@gin(x8);</span><br></pre></td></tr></table></figure></div>
<p>运行结果：<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/LINGO%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%A7%A3%E8%AF%BB/answer3_c.png"
                      alt="answer3_c"
                ></p>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>LINGO</tag>
        <tag>数模</tag>
      </tags>
  </entry>
  <entry>
    <title>Project各个版本安装包</title>
    <url>/2023/04/03/Project%E5%90%84%E4%B8%AA%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E5%8C%85/</url>
    <content><![CDATA[<p>Project 2019(32&#x2F;64)<br>下载地址：<a class="link"   href="https://pan.baidu.com/s/1Di30sLzygoaWR-4DYGQiDw" >https://pan.baidu.com/s/1Di30sLzygoaWR-4DYGQiDw <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>提取码: q511  </p>
<p>Project2016(32&#x2F;64位)<br>下载地址: <a class="link"   href="https://pan.baidu.com/s/1JsuLCruSlypzM36_b2vQpw" >https://pan.baidu.com/s/1JsuLCruSlypzM36_b2vQpw <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>密码：yhe8</p>
<p>Project 2013(32&#x2F;64)位<br>下载地址：<a class="link"   href="https://pan.baidu.com/s/1rYSuzeQnfWNobaT6jUoDoA" >https://pan.baidu.com/s/1rYSuzeQnfWNobaT6jUoDoA <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>提取码: ua8a</p>
<p>Project2010(32&#x2F;64位)<br>下载地址：<a class="link"   href="https://pan.baidu.com/s/1LR7-FDd_4hestfZ0BWkorA" >https://pan.baidu.com/s/1LR7-FDd_4hestfZ0BWkorA <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>密码：xk6m</p>
<p>Project2007(32&#x2F;64位)<br>链接：<a class="link"   href="https://pan.baidu.com/s/1KWbFCaNW0XkS58nOXJxzsQ" >https://pan.baidu.com/s/1KWbFCaNW0XkS58nOXJxzsQ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>密码：7k6r</p>
<p>Project2003<br>下载地址:<a class="link"   href="https://pan.baidu.com/s/1JF_WzJ3rjRpqQJcfO3o9UQ" >https://pan.baidu.com/s/1JF_WzJ3rjRpqQJcfO3o9UQ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>提取码: 92qc</p>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Lagrange插值法</title>
    <url>/2023/04/19/Lagrange%E6%8F%92%E5%80%BC%E6%B3%95/</url>
    <content><![CDATA[<a class="button  center large" href='https://blog.csdn.net/qq_43025814/article/details/119896698' title='C#实现Lagrange插值'><i class='fa-brands fa-c'></i> C#实现Lagrange插值</a>



<p>专为小白制作的copy步骤：</p>
<p>找到From1.cs</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/Lagrange%E6%8F%92%E5%80%BC%E6%B3%95/%E6%89%93%E5%BC%80%E5%B1%9E%E6%80%A7%E7%AA%97%E5%8F%A3.png"
                      alt="打开属性窗口"
                ></p>
<p>把上面链接里的代码对应放入From1.cs和program.cs</p>
<p>先打开From1的属性窗口，添加MouseDown事件</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/Lagrange%E6%8F%92%E5%80%BC%E6%B3%95/%E6%B7%BB%E5%8A%A0MouseDown%E4%BA%8B%E4%BB%B6.png"
                      alt="添加MouseDown事件"
                ></p>
<p>运行时左键单击添加点，右键单击出结果</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/Lagrange%E6%8F%92%E5%80%BC%E6%B3%95/%E5%B7%A6%E9%94%AE%E5%8D%95%E5%87%BB.png"
                      alt="左键单击"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/Lagrange%E6%8F%92%E5%80%BC%E6%B3%95/cover.png"
                      alt="右键单击"
                ></p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>计算方法</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS水文分析</title>
    <url>/2023/04/26/ArcGIS%E6%B0%B4%E6%96%87%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="ArcGIS操作"><a href="#ArcGIS操作" class="headerlink" title="ArcGIS操作"></a>ArcGIS操作</h1><p>老师给的教程与下文类似</p>
<a class="button  regular" href='https://zhuanlan.zhihu.com/p/398072975' title='【教程】ArcGIS水文分析提取河流及流域'><i class='fa-brands fa-zhihu'></i> 【教程】ArcGIS水文分析提取河流及流域</a>

<p>不过老师的教程中没有河流链接这一步</p>
<p>最终做出的效果如下</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/ArcGIS%E6%B0%B4%E6%96%87%E5%88%86%E6%9E%90/GIS%E7%BB%93%E6%9E%9C.png"
                     
                ></p>
<h1 id="编程操作"><a href="#编程操作" class="headerlink" title="编程操作"></a>编程操作</h1><p>GridSame.txt和GridDiff.txt分别是我是否进行河流链接的最终结果。</p>
<p><strong>不进行</strong> <em>河流连接</em> 最后结果中grid_id全部 <strong>相同</strong> ，为1，河段数 <strong>316</strong></p>
<p><strong>进行</strong> <em>河流连接</em> 之后grid_id <strong>不同</strong> ，但是河段多了非常多， <strong>47000+</strong> </p>
<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="临时"><a href="#临时" class="headerlink" title="临时"></a>临时</h3><p>下面这是读取文件使用的临时数据结构</p>
<p>文件中的结构：<br><code>OBJECTID,ARCID,grid_code,from_node,to_node,Shape_Length</code></p>
<p>因为Shape_Length是Double类型，</p>
<p>所以arcData存前面的数据，meters就是后面的Length</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;<span class="type">int</span>[]&gt; arcData = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">ArrayList&lt;Double&gt; meters = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Double&gt;();</span><br></pre></td></tr></table></figure></div>

<h3 id="持久"><a href="#持久" class="headerlink" title="持久"></a>持久</h3><p>以下是我用来存储数据的三个结构。</p>
<div class="note-large default"><div class="notel-title"><p>数据结构</p>
</div><div class="notel-content"><p>List&lt;int[]&gt; Rivers_Nodes &#x3D; new ArrayList&lt;&gt;();<br>List<Double> Rivers_Length &#x3D; new ArrayList&lt;&gt;();<br>List&lt;int[]&gt; Rivers_Arcs &#x3D; new ArrayList&lt;&gt;();</p>
</div></div>

<p>各个List&lt;&gt;依次对应,即Rivers_Nodes.get(i)对应Rivers_Length.get(i)和Rivers_Arcs.get(i);<br>他们分别是河流i的结点集，总长度，边集。<br>原始数据太少无法建立河流拓扑，就使用了简单的数据结构。</p>
<div class="note-large blue"><div class="notel-title"><p>Tips</p>
</div><div class="notel-content"><p>其实List&lt;int[]&gt;不是很方便，每次添加新元素进Nodes和Arcs的集合非常麻烦,应该整个嵌套List的，或者弄一个List数组</p>
<p>然后封装一下这个数组的添加删除修改操作，操作时需要检查数组大小和上限（数据结构乱入）</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Integer&gt; lis[]=<span class="keyword">new</span> <span class="title class_">ArrayList</span>[MaxSize+<span class="number">1</span>];</span><br></pre></td></tr></table></figure></div>

<p>懒得再改了</p>
<p>下面这段代码就是用来添加新边新点的，其实我应该封装一下的，不过不是什么重要玩意儿，懒得搞了</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//添加边</span></span><br><span class="line"><span class="type">int</span>[] temp1 = <span class="keyword">new</span> <span class="title class_">int</span>[Rivers_Arcs.get(river_id).length+<span class="number">1</span>];</span><br><span class="line"><span class="comment">//复制</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; Rivers_Arcs.get(river_id).length; k++) &#123;</span><br><span class="line">    temp1[k]=Rivers_Arcs.get(river_id)[k];</span><br><span class="line">&#125;</span><br><span class="line">temp1[temp1.length-<span class="number">1</span>]=b[<span class="number">0</span>];</span><br><span class="line">Rivers_Arcs.set(river_id,temp1);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt; RiversNodes.get(river_id).length; j++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(RiversNodes.get(river_id)[j] == a[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="comment">//这里说明a[0],a[1]都已存在</span></span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里说明a[1]存在,a[0]不存在，需要添加a[0]</span></span><br><span class="line"><span class="type">int</span>[] temp2 = <span class="keyword">new</span> <span class="title class_">int</span>[RiversNodes.get(river_id).length+<span class="number">1</span>];</span><br><span class="line"><span class="comment">//复制</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; RiversNodes.get(river_id).length; k++) &#123;</span><br><span class="line">    temp2[k]=RiversNodes.get(river_id)[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加</span></span><br><span class="line">temp2[temp2.length-<span class="number">1</span>]=a[<span class="number">0</span>];</span><br><span class="line">RiversNodes.set(river_id,temp2);</span><br><span class="line"><span class="keyword">return</span>;</span><br></pre></td></tr></table></figure></div>
</div></div>


<h2 id="ReadTxt"><a href="#ReadTxt" class="headerlink" title="ReadTxt"></a>ReadTxt</h2><p>没有细化了，直接网上找的模板弄的</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ReadTxt</span><span class="params">(List&lt;<span class="type">int</span>[]&gt; arcs,ArrayList&lt;Double&gt; meters)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;src/GridSame.txt&quot;</span>;</span><br><span class="line"><span class="comment">//            String fileName = &quot;src/GridDiff.txt&quot;;</span></span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            fis = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">            <span class="type">InputStreamReader</span> <span class="variable">isr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(fis);</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(isr);</span><br><span class="line"></span><br><span class="line">            String line;</span><br><span class="line">            line = br.readLine();</span><br><span class="line"><span class="comment">//            if(line!=null)&#123;</span></span><br><span class="line"><span class="comment">//                System.out.println(line);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line">            <span class="keyword">while</span>((line = br.readLine()) != <span class="literal">null</span>)&#123;</span><br><span class="line">                String[] arc_S = line.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="type">int</span>[] arc = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                    arc[i]=Integer.parseInt(arc_S[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                arcs.add(arc);</span><br><span class="line">                meters.add(Double.parseDouble(arc_S[<span class="number">5</span>]));</span><br><span class="line">            &#125;</span><br><span class="line">            br.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="addNodes"><a href="#addNodes" class="headerlink" title="addNodes"></a>addNodes</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addNodes</span><span class="params">(List&lt;<span class="type">int</span>[]&gt; RiversNodes,List&lt;<span class="type">int</span>[]&gt; Rivers_Arcs,List&lt;Double&gt; Rivers_Length,<span class="type">int</span>[] arc,Double m)</span>&#123;</span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">        a[<span class="number">0</span>]=arc[<span class="number">3</span>];</span><br><span class="line">        a[<span class="number">1</span>]=arc[<span class="number">4</span>];</span><br><span class="line">        <span class="type">int</span>[] b = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1</span>];</span><br><span class="line">        b[<span class="number">0</span>] = arc[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(RiversNodes.isEmpty())&#123;</span><br><span class="line">            RiversNodes.add(a);</span><br><span class="line"><span class="comment">//            RiversNodes.set(0,a);</span></span><br><span class="line"><span class="comment">//            Rivers_Length.set(0,m);</span></span><br><span class="line">            Rivers_Arcs.add(b);</span><br><span class="line">            Rivers_Length.add(m);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">river_id</span> <span class="operator">=</span> <span class="number">0</span>; river_id &lt; RiversNodes.size(); river_id++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; RiversNodes.get(river_id).length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(RiversNodes.get(river_id)[i] == a[<span class="number">0</span>] )&#123;</span><br><span class="line">                    <span class="comment">//若a[0]已存在，累加长度</span></span><br><span class="line">                    Rivers_Length.set(river_id,Rivers_Length.get(river_id)+m);</span><br><span class="line">                    <span class="comment">//添加边</span></span><br><span class="line">                    <span class="type">int</span>[] temp1 = <span class="keyword">new</span> <span class="title class_">int</span>[Rivers_Arcs.get(river_id).length+<span class="number">1</span>];</span><br><span class="line">                    <span class="comment">//复制</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; Rivers_Arcs.get(river_id).length; k++) &#123;</span><br><span class="line">                        temp1[k]=Rivers_Arcs.get(river_id)[k];</span><br><span class="line">                    &#125;</span><br><span class="line">                    temp1[temp1.length-<span class="number">1</span>]=b[<span class="number">0</span>];</span><br><span class="line">                    Rivers_Arcs.set(river_id,temp1);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; Rivers_Arcs.get(river_id).length; j++) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(Rivers_Arcs.get(river_id)[j] == b[<span class="number">0</span>])&#123;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt; RiversNodes.get(river_id).length; j++) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(RiversNodes.get(river_id)[j] == a[<span class="number">1</span>])&#123;</span><br><span class="line">                            <span class="comment">//这里说明a[0],a[1]都已存在</span></span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//这里说明a[0]存在,a[1]不存在，需要添加a[1]</span></span><br><span class="line">                    <span class="type">int</span>[] temp2 = <span class="keyword">new</span> <span class="title class_">int</span>[RiversNodes.get(river_id).length+<span class="number">1</span>];</span><br><span class="line">                    <span class="comment">//复制</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; RiversNodes.get(river_id).length; k++) &#123;</span><br><span class="line">                        temp2[k]=RiversNodes.get(river_id)[k];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//添加</span></span><br><span class="line">                    temp2[temp2.length-<span class="number">1</span>]=a[<span class="number">1</span>];</span><br><span class="line">                    RiversNodes.set(river_id,temp2);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(RiversNodes.get(river_id)[i] == a[<span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="comment">//这里说明a[1]存在，累加长度</span></span><br><span class="line">                    Rivers_Length.set(river_id,Rivers_Length.get(river_id)+m);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//添加边</span></span><br><span class="line">                    <span class="type">int</span>[] temp1 = <span class="keyword">new</span> <span class="title class_">int</span>[Rivers_Arcs.get(river_id).length+<span class="number">1</span>];</span><br><span class="line">                    <span class="comment">//复制</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; Rivers_Arcs.get(river_id).length; k++) &#123;</span><br><span class="line">                        temp1[k]=Rivers_Arcs.get(river_id)[k];</span><br><span class="line">                    &#125;</span><br><span class="line">                    temp1[temp1.length-<span class="number">1</span>]=b[<span class="number">0</span>];</span><br><span class="line">                    Rivers_Arcs.set(river_id,temp1);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt; RiversNodes.get(river_id).length; j++) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(RiversNodes.get(river_id)[j] == a[<span class="number">0</span>])&#123;</span><br><span class="line">                            <span class="comment">//这里说明a[0],a[1]都已存在</span></span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//这里说明a[1]存在,a[0]不存在，需要添加a[0]</span></span><br><span class="line">                    <span class="type">int</span>[] temp2 = <span class="keyword">new</span> <span class="title class_">int</span>[RiversNodes.get(river_id).length+<span class="number">1</span>];</span><br><span class="line">                    <span class="comment">//复制</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; RiversNodes.get(river_id).length; k++) &#123;</span><br><span class="line">                        temp2[k]=RiversNodes.get(river_id)[k];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//添加</span></span><br><span class="line">                    temp2[temp2.length-<span class="number">1</span>]=a[<span class="number">0</span>];</span><br><span class="line">                    RiversNodes.set(river_id,temp2);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//到这里说明a[0],a[1]都不存在，直接加上</span></span><br><span class="line">        RiversNodes.add(a);</span><br><span class="line">        Rivers_Length.add(m);</span><br><span class="line">        Rivers_Arcs.add(b);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="printResult"><a href="#printResult" class="headerlink" title="printResult"></a>printResult</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printResult</span><span class="params">(List&lt;<span class="type">int</span>[]&gt; Rivers_Nodes,List&lt;<span class="type">int</span>[]&gt; Rivers_Arcs,ArrayList&lt;Double&gt; meters)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;以下为整理好的河网&quot;</span>);</span><br><span class="line">    System.out.println();</span><br><span class="line">    System.out.println(<span class="string">&quot;---------------------------------------------&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;河流id&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;结点id&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;边id&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;河流总长&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;---------------------------------------------&quot;</span>);</span><br><span class="line">    System.out.println();</span><br><span class="line">    System.out.println();</span><br><span class="line">    System.out.println(<span class="string">&quot;---------------------------------------------&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; Rivers_Nodes.size(); k++) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;River_id:&quot;</span> + k);</span><br><span class="line">        System.out.print(<span class="string">&quot;Nodes:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; Rivers_Nodes.get(k).length; j++) &#123;</span><br><span class="line">            System.out.print(Rivers_Nodes.get(k)[j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.print(<span class="string">&quot;Arcs:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; Rivers_Arcs.get(k).length; j++) &#123;</span><br><span class="line">            System.out.print(Rivers_Arcs.get(k)[j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;Length:&quot;</span>+ meters.get(k));</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------------------------------------&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;<span class="type">int</span>[]&gt; arcData = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        ArrayList&lt;Double&gt; meters = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Double&gt;();</span><br><span class="line">        <span class="comment">//OBJECTID（无意义）,ARCID（无用）,grid_code（无用）,from_node,to_node,Shape_Length</span></span><br><span class="line">        ReadTxt(arcData,meters);</span><br><span class="line">        <span class="comment">//控制台打印</span></span><br><span class="line"><span class="comment">//        for (int i = 0; i &lt; arcData.size(); i++) &#123;</span></span><br><span class="line"><span class="comment">//            for (int j = 0; j &lt; arcData.get(i).length; j++) &#123;</span></span><br><span class="line"><span class="comment">//                System.out.print(arcData.get(i)[j]+&quot; &quot;);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            System.out.println(meters.get(i));</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="comment">//ArcID==TO_NODE时说明为末端结点</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历arcData，在Rivers_Nodes中查询from_node和to_node,首次出现就说明属于一段新河流的,</span></span><br><span class="line">        <span class="comment">// 将其from_node和to_node放到Rivers_nodes中,其Length加到对应的River_Length中</span></span><br><span class="line">        List&lt;<span class="type">int</span>[]&gt; Rivers_Nodes = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Double&gt; Rivers_Length = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;<span class="type">int</span>[]&gt; Rivers_Arcs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arcData.size(); i++) &#123;</span><br><span class="line">            addNodes(Rivers_Nodes,Rivers_Arcs,Rivers_Length,arcData.get(i),meters.get(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        printResult(Rivers_Nodes,Rivers_Arcs,meters);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/ArcGIS%E6%B0%B4%E6%96%87%E5%88%86%E6%9E%90/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%9C.png"
                     
                ></p>
<p>最后结果是66条河流，明显不符合实际，仔细观察结果发现有些河段与其他河段“断联”了，没有完全连接。</p>
<h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>没有完全链接的原因猜测：</p>
<ul>
<li><p><del>水文处理没有处理汇（看到有说默认填洼和处理汇的 结果是一样的，基本可以排除）</del></p>
</li>
<li><p>没有进行河网连接，不过进行河网链接之后反而输出的结果中河段多了非常多（河段47000+，最终河流12000-反而“断联”的情况更严重）不知道怎么回事，唉</p>
<p>GPT的解释：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/ArcGIS%E6%B0%B4%E6%96%87%E5%88%86%E6%9E%90/GPT%E8%A7%A3%E7%AD%94.png"
                     
                ></p>
</li>
</ul>
<h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><ul>
<li><p>熟悉了ArcGIS水文分析相关步骤与知识</p>
</li>
<li><p>简单练习了java语法</p>
</li>
</ul>
]]></content>
      <categories>
        <category>GIS</category>
        <category>ArcGIS</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
      </tags>
  </entry>
  <entry>
    <title>SPA主成分分析</title>
    <url>/2023/05/26/SPA%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="SPA主成分分析"><a href="#SPA主成分分析" class="headerlink" title="SPA主成分分析"></a>SPA主成分分析</h1><details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>各种实现 </summary>
              <div class='content'>
              <p><a class="button  regular" href='https://blog.csdn.net/qq_36108664/article/details/104972122' title='【CSDN】MATLAB主成分分析（PCA）代码及结果分析实例'><i class='fa-solid fa-c'></i> 【CSDN】MATLAB主成分分析（PCA）代码及结果分析实例</a></p><p><a class="button  regular" href='https://blog.csdn.net/qq_25990967/article/details/121324265' title='【CSDN】主成分分析（PCA）及其可视化——matlab_pca可视化'><i class='fa-solid fa-c'></i> 【CSDN】主成分分析（PCA）及其可视化——matlab_pca可视化</a></p><p><a class="button  regular" href='https://blog.csdn.net/qq_36108664/article/details/107850006' title='【CSDN】Python实现主成分分析（PCA）降维'><i class='fa-solid fa-c'></i> 【CSDN】Python实现主成分分析（PCA）降维</a></p><p><a class="button  regular" href='https://blog.csdn.net/luohualiushui1/article/details/88342768' title='【CSDN】用java实现主成分分析(PCA)降维'><i class='fa-solid fa-c'></i> 【CSDN】用java实现主成分分析(PCA)降维</a></p><p>感谢这些作者</p>
              </div>
            </details>

<p>SPSS软件中的实操：<a class="button  regular" href='https://blog.csdn.net/weixin_39759155/article/details/110160459' title='【CSDN】pca主成分分析结果解释_主成分分析(PCA)原理及SPSS实操_'><i class='fa-solid fa-c'></i> 【CSDN】pca主成分分析结果解释_主成分分析(PCA)原理及SPSS实操_</a></p>
]]></content>
      <categories>
        <category>Activity</category>
        <category>数模</category>
      </categories>
      <tags>
        <tag>多元统计分析</tag>
        <tag>SPSS</tag>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>cemu模拟器玩switch游戏</title>
    <url>/2023/04/11/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%A9switch%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><h2 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h2><p>首先按这个视频弄，十合一，解压即用，非常方便  </p>
<p>如果嫌十合一太大，下面有只整合塞尔达合Cemu的。  </p>
<a class="button  large center" href='https://www.bilibili.com/video/BV1XS4y1p7cf/?share_source=copy_web&vd_source=e7a3b9bafd0572f40c66626ff7445e15' title='【Cemu模拟器 WIIU游戏十合一整合版【解压即玩】】'><i class='fa-brands fa-bilibili'></i> 【Cemu模拟器 WIIU游戏十合一整合版【解压即玩】】</a>

<a class="button  regular" href='https://pan.baidu.com/s/1u_PT7akpxmnU6rinH85Hqg' title='省流：百度网盘链接（提取码：asxr）'><i class='fa-solid fa-cloud-arrow-down'></i> 省流：百度网盘链接（提取码：asxr）</a>

 <details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>十合一游戏列表 </summary>
              <div class='content'>
              <ul><li><p>塞尔达传说 荒野之息</p></li><li><p>塞尔达传说 风之杖 HD</p></li><li><p>塞尔达传说 黄昏公主 HD</p></li><li><p>猎天使魔女2</p></li><li><p>超级马里奥3D世界</p></li><li><p>蘑菇队长 奇诺比奥 宝藏追踪者</p></li><li><p>马里奥赛车8</p></li><li><p>纸片马里奥 彩色喷涂</p></li><li><p>异度之刃X</p></li><li><p>耀西的毛线世界</p></li></ul>
              </div>
            </details>
<hr>
<p>这个是只整合塞尔达和Cemu的</p>
   <a class="button  large center" href='https://www.bilibili.com/video/BV1oY411776W/?spm_id_from=333.337.search-card.all.click&vd_source=00cc25c956c7dd4abc7cbd667f62f6ce' title='塞尔达传说：旷野之息 Cemu整合包使用教程'><i class='fa-brands fa-bilibili'></i> 塞尔达传说：旷野之息 Cemu整合包使用教程</a>  

<p><strong>注意！</strong></p>
<p>这个视频是有分集的！</p>
<p>闪退黑屏、灵敏度调节、存档转移……..</p>
<p>自己有问题就去找</p>
<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>问题清单 </summary>
              <div class='content'>
              <ul><li>闪退黑屏</li><li>视角灵敏度调节</li><li>改键</li><li>键鼠无效</li><li>图形包乱码</li><li>手机陀螺仪体感</li><li>鼠标模拟体感</li><li>Amiibo</li><li>存档转移</li></ul>
              </div>
            </details>
<h2 id="必要工作"><a href="#必要工作" class="headerlink" title="必要工作"></a>必要工作</h2><h3 id="模拟器"><a href="#模拟器" class="headerlink" title="模拟器"></a>模拟器</h3><p>上面文件下好之后，还需要下载<strong>cemuhook</strong>，否则会出现塞尔达过场动画无法正常显示，黑屏的问题。</p>
<a class="button  large center" href='https://www.bilibili.com/video/BV19f4y137y5/?share_source=copy_web&vd_source=e7a3b9bafd0572f40c66626ff7445e15' title='cemu模拟器，《塞尔达传说：旷野之息》pc模拟器无法加载过场动画及解决办法'><i class='fa-brands fa-bilibili'></i> cemu模拟器，《塞尔达传说：旷野之息》pc模拟器无法加载过场动画及解决办法</a>
<a class="button  regular" href='https://cemuhook.sshnuke.net/#Downloads' title='下载链接（需要魔法）'><i class='fa-solid fa-cloud-arrow-down'></i> 下载链接（需要魔法）</a>  

<p><em><strong>ps:需要下载的三个文件其实非常小，不方便的朋友们可以直接联系我要文件哈</strong></em></p>
<h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>整合包中塞尔达已经开了替换林克为林可儿的mod。记得关掉（不关也行）</p>
 <details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>游戏打开后，这三个关掉就是正常林克了 </summary>
              <div class='content'>
              <p>选项-&gt;图形插件</p><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%A9switch%E6%B8%B8%E6%88%8F/linker.png"
                      alt="linker"
                ></p><p>以防万一hhh，万一真的有人搞不明白这个</p>
              </div>
            </details>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2> <details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>一些游戏截图 </summary>
              <div class='content'>
              <p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%A9switch%E6%B8%B8%E6%88%8F/srd_1.jpg"
                      alt="塞尔达1"
                ></p><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%A9switch%E6%B8%B8%E6%88%8F/srd_2.png"
                      alt="塞尔达2"
                ></p><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%A9switch%E6%B8%B8%E6%88%8F/srd_3.png"
                      alt="塞尔达3"
                ></p><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%A9switch%E6%B8%B8%E6%88%8F/mc8_1.png"
                      alt="马车8"
                ></p><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%A9switch%E6%B8%B8%E6%88%8F/m3dw_1.png"
                      alt="马里奥3d世界"
                ></p>
              </div>
            </details>

<p>本来我是不打算使用cemu的，因为有些麻烦，而且wiiu的游戏比较少，但是其他模拟器要么电脑带不动，要么或多或少有点问题，而且cemu玩塞尔达的优化比较好，性能要求不高就用这个了。</p>
<h1 id="一些其他的模拟器"><a href="#一些其他的模拟器" class="headerlink" title="一些其他的模拟器"></a>一些其他的模拟器</h1><h2 id="YUZU"><a href="#YUZU" class="headerlink" title="YUZU"></a>YUZU</h2><a class="button  large center" href='https://www.bilibili.com/read/cv17066409' title='【YUZU模拟器最新整合版】switch游戏模拟器(不定时更新)'><i class='fa-brands fa-bilibili'></i> 【YUZU模拟器最新整合版】switch游戏模拟器(不定时更新)</a>

<a class="button  regular" href='https://pan.baidu.com/s/1pv5Zasr2IDwzj2hLRr15Mw?pwd=tuyp' title='百度网盘下载链接'><i class='fa-solid fa-cloud-arrow-down'></i> 百度网盘下载链接</a>

<p>最一开始就是准备用YUZU的，但是这个模拟器对AMD不太友好，我的电脑用不了</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%A9switch%E6%B8%B8%E6%88%8F/yuzu_1.png"
                     
                ></p>
<p>而且据网上说YUZU对电脑性能要求比较高（Ryujinx也是）</p>
<h2 id="Ryujinx（龙神）"><a href="#Ryujinx（龙神）" class="headerlink" title="Ryujinx（龙神）"></a>Ryujinx（龙神）</h2><a class="button  large center" href='https://www.bilibili.com/read/cv21616142' title='【Ryujinx模拟器最新整合版】NS龙神模拟器（不定时更新）'><i class='fa-brands fa-bilibili'></i> 【Ryujinx模拟器最新整合版】NS龙神模拟器（不定时更新）</a>

<a class="button  regular" href='https://pan.baidu.com/s/1IKVsxIEYaJzsVSs4Q4Zu7Q?pwd=sfty' title='百度网盘下载链接'><i class='fa-solid fa-cloud-arrow-down'></i> 百度网盘下载链接</a>



<p>我本来也准备用Ryujinx的，可以正常玩游戏</p>
<p><a class="link"   href="https://www.bilibili.com/read/cv20541633/" >Switch模拟器Ryujinx联网版官方中文入门教程（含最新KEY和固件） - 哔哩哔哩 (bilibili.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
 <details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>一些游戏截图 </summary>
              <div class='content'>
              <p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%A9switch%E6%B8%B8%E6%88%8F/yunjinx_1.jpg"
                     
                ></p><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%A9switch%E6%B8%B8%E6%88%8F/yunjinx_2.jpg"
                     
                ></p>
              </div>
            </details>



<p>但是实在不知道什么原因，这个模拟器打开再关闭之后任务管理器会看到有进程一直开着在，每开关一次都会多一个，而且杀不掉</p>
<p>尝试过以下几种方法都成功不了</p>
<ul>
<li>任务管理器直接、右键结束进程</li>
<li>任务管理器-性能 打开 资源监视器，查看关联句柄结束进程</li>
<li>cmd<ul>
<li><p>taskkill &#x2F;im &#x2F;…</p>
</li>
<li><p>taskkill &#x2F;f &#x2F;im…</p>
</li>
<li><p>管理员模式打开cmd，taskkill</p>
<ul>
<li>这个方法第一次使用会显示成功杀掉，但是立刻再用tasklist查看会发现依然存在，此时再使用taskkill就显示无实例，杀不了</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>然后我就比较反感，就弃用Ryujinx了</p>
<hr>
<p>更新：还是用ryujinx了</p>
<p>可以看我关于ryujinx的文章：<a class="link"   href="https://homehu.top/2023/04/12/ryujinx%E5%9C%A8%E7%BA%BF%E7%89%88/" >ryujinx在线版(LDN版) - 虹狐 Home Hu <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr>
<p>更新：发现只要把模拟器安装在C&#x2F;D盘就不会出现这样的问题（没错，我之前是装在固态硬盘里的）</p>
<h2 id="Citra"><a href="#Citra" class="headerlink" title="Citra"></a>Citra</h2><a class="button  large center" href='https://www.bilibili.com/read/cv19871084' title='【Citra模拟器最新整合版】3DS游戏模拟器（不定时更新）'><i class='fa-brands fa-bilibili'></i> 【Citra模拟器最新整合版】3DS游戏模拟器（不定时更新）</a>

<a class="button  regular" href='https://pan.baidu.com/s/1kVxIxBpVYoRgAJaVe9lfjQ?pwd=ctia' title='百度网盘下载链接'><i class='fa-solid fa-cloud-arrow-down'></i> 百度网盘下载链接</a>

<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="格式转换工具"><a href="#格式转换工具" class="headerlink" title="格式转换工具"></a>格式转换工具</h2><a class="button  regular" href='https://pan.baidu.com/s/17iflddIXQbax5j8HAx9F6g?pwd=gszh' title='百度网盘下载链接'><i class='fa-solid fa-cloud-arrow-down'></i> 百度网盘下载链接</a>

<p><a class="link"   href="https://github.com/dezem/SAK" >dezem&#x2F;SAK: Switch Army Knife (SAK) (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>关于这个工具我有在新文章里说明怎么使用：<a class="link"   href="https://homehu.top/2023/04/12/ryujinx%E5%9C%A8%E7%BA%BF%E7%89%88/" >ryujinx在线版(LDN版) - 虹狐 Home Hu <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Game</category>
      </categories>
      <tags>
        <tag>Switch</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/03/08/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>博客的部署</title>
    <url>/2023/03/10/first-Blog/</url>
    <content><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>我基本一直跟着这个教程走的，非常的详细非常的优质！</p>
<a class="button  center large" href='https://www.bilibili.com/read/cv12633102' title='保姆级教程'><i class='fa-brands fa-bilibili'></i> 保姆级教程</a>
<h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><div class="note-large blue"><div class="notel-title"><p>提示</p>
</div><div class="notel-content"><p>4.2第二步中</p>
<div class="highlight-container" data-rel="Yml"><figure class="iseeu highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:rygdsddssd/rygdsddssd.github.io.git</span></span><br><span class="line">  <span class="string">branch:master</span></span><br></pre></td></tr></table></figure></div>
<p>由于github将master分支改名为main，所以最后要进行更改</p>
<div class="highlight-container" data-rel="Yml"><figure class="iseeu highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:rygdsddssd/rygdsddssd.github.io.git</span></span><br><span class="line">  <span class="string">branch:main</span></span><br></pre></td></tr></table></figure></div></div></div>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>今天加了aplayer插件（是这个主题里面自带的直接配置就行），但是应该是因为这个主题创建者没有放太多功能进来，只有一部分可以设置<br>这是网上由找到的几个文章，可以添加网易云歌单的，近期事情太多，先放这里，以后有时间再慢慢弄吧</p>
<a class="button  center regular" href='https://developer.aliyun.com/article/894787' title='给自己的网站添加网易云音乐歌单'><i class='fa-solid fa-arrow-right'></i> 给自己的网站添加网易云音乐歌单</a>  
<a class="button  regular" href='https://cloud.tencent.com/developer/article/1833968' title='引入Aplayer播放音乐(踩坑向)'><i class='fa-solid fa-arrow-right'></i> 引入Aplayer播放音乐(踩坑向)</a>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><h4 id=""><a href="#" class="headerlink" title=""></a><details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>几个控制台命令 </summary>
              <div class='content'>
              <div class="note-large default"><div class="notel-title"><p>d:</p></div><div class="notel-content"><p>到d盘</p></div></div><div class="note-large default"><div class="notel-title"><p>cd xxx</p></div><div class="notel-content"><p>到当前目录下的xxx中</p></div></div>
              </div>
            </details></h4><h4 id="-1"><a href="#-1" class="headerlink" title=""></a><details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>几个hexo 命令 </summary>
              <div class='content'>
              <div class="note-large default"><div class="notel-title"><p>hexo clean</p></div><div class="notel-content"><p>清除缓存文件 db.json 和已生成的静态文件 public。  </p><ul><li>网站显示异常时可以执行这条命令试试。</li></ul></div></div><div class="note-large default"><div class="notel-title"><p>hexo g</p></div><div class="notel-content"><p>生成网站静态文件到默认设置的 public 文件夹。</p><ul><li>便于查看网站生成的静态文件或者手动部署网站；</li><li>如果使用自动部署，不需要先执行该命令；</li></ul></div></div><div class="note-large default"><div class="notel-title"><p>hexo s</p></div><div class="notel-content"><p>启动本地服务器，用于预览主题。<br>默认地址 <a class="link"   href="http://localhost:4000/" >http://localhost:4000/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></div></div><div class="note-large default"><div class="notel-title"><p>hexo d</p></div><div class="notel-content"><p>自动生成网站静态文件，并部署到设定的仓库。</p></div></div>
              </div>
            </details></h4><h3 id="找资源"><a href="#找资源" class="headerlink" title="找资源"></a>找资源</h3><h4 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h4><p>英文网站 <a class="link"   href="https://wallhaven.cc/" >wallhaven <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h4 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h4><p> <a class="link"   href="https://fontawesome.com/" >Fontawesome <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 也就是本模板中使用的</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB拼接图片</title>
    <url>/2023/03/20/matlab%E6%8B%BC%E6%8E%A5%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<a class="button  large center" href='https://blog.csdn.net/qq_45059457/article/details/106438378' title='找到的题目来源'><i class='fa-solid fa-arrow-right'></i> 找到的题目来源</a>

<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>将下面这样的多个图片拼接到一起 </summary>
              <div class='content'>
              <p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E6%95%B0%E6%A8%A1-%E6%8B%BC%E6%8E%A5%E5%9B%BE%E7%89%87/%E9%A2%98%E7%9B%AE.png"
                      alt="题目"
                ></p>
              </div>
            </details>

<h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><details class="black" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>函数 </summary>
              <div class='content'>
              <p><a class="button  large center" href='https://ww2.mathworks.cn/help/matlab/referencelist.html?type=function&s_tid=CRUX_topnav' title='官方文档'><i class='fa-solid fa-arrow-right'></i> 官方文档</a><br><a class="button  regular" href='https://blog.csdn.net/iii66yy/article/details/124579403' title='Zeros'><i class='fa-solid fa-arrow-right'></i> Zeros</a> <a class="button  regular" href='https://blog.csdn.net/zxyhhjs2017/article/details/78680595' title='Max'><i class='fa-solid fa-arrow-right'></i> Max</a><br>实际上看这些不如你先去看上面官方文档，看不懂再找别人写的</p><p class='h3' id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><details class="black" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>读取图片 </summary>              <div class='content'>              <p>imread函数：MATLAB中读取图片的常用函数<br>用法：</p><ul><li>A &#x3D; imread(filename)</li><li>A &#x3D; imread(filename,fmt)</li><li>A &#x3D; imread(___,idx)</li><li>A &#x3D; imread(___,Name,Value)</li><li>[A,map] &#x3D; imread(___)</li><li>[A,map,transparency] &#x3D; imread(___)<br>其中，A为返回的<em>数组</em>，用于存放图像中的<em>像素矩阵</em>。</li></ul><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="code"><pre><span class="line">a1=imread(<span class="string">&#x27;000.bmp&#x27;</span>);</span><br><span class="line">[m,n]=<span class="built_in">size</span>(a1);</span><br><span class="line">imshow(a1);<span class="comment">%显示图像</span></span><br><span class="line"><span class="comment">%image(a1);</span></span><br></pre></td></tr></table></figure></div><p>注意几个显示图片函数的区别：imshow是显示灰度图像的；image和imagesc 显示出来是彩色的（索引图像），索引图像是矩阵和colormap配合起来显示的。<br>批量读取图片</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="code"><pre><span class="line">dirname = <span class="string">&#x27;ImageChips&#x27;</span>;</span><br><span class="line">files = dir(fullfile(dirname, <span class="string">&#x27;*.bmp&#x27;</span>));</span><br><span class="line">a=<span class="built_in">zeros</span>(m,n,<span class="number">19</span>);</span><br><span class="line">pic=[];</span><br><span class="line"><span class="keyword">for</span> ii = <span class="number">1</span>:<span class="built_in">length</span>(files)</span><br><span class="line">  filename = fullfile(dirname, files(ii).name);</span><br><span class="line">  a(:,:,ii)=imread(filename);</span><br><span class="line">  pic=[pic,a(:,:,ii)];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%double(pic);</span></span><br><span class="line"><span class="built_in">figure</span></span><br><span class="line">imshow(pic,[])</span><br></pre></td></tr></table></figure></div>              </div>            </details><details class="black" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>怎样识别拼接 </summary>              <div class='content'>              <p>这一题的重难点就是在于</p><ul><li>应该谁跟谁拼接？</li><li>第i片的右边缘应该跟左边缘具有相似性；相似性如何度量？（标准不唯一！）<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E6%95%B0%E6%A8%A1-%E6%8B%BC%E6%8E%A5%E5%9B%BE%E7%89%87/%E6%80%BB%E4%BD%93%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0.png"
                      alt="总体相关系数"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E6%95%B0%E6%A8%A1-%E6%8B%BC%E6%8E%A5%E5%9B%BE%E7%89%87/%E6%A0%B7%E6%9C%AC%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0.png"
                      alt="样本相关系数"
                ></li></ul><details class="black" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>计算第4片的右边缘与第7片左边缘的相关系数 </summary>              <div class='content'>              <div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="code"><pre><span class="line">a=double(a);</span><br><span class="line">b=a/<span class="number">255</span>;</span><br><span class="line">x=b(:,<span class="number">72</span>,<span class="number">4</span>);</span><br><span class="line">y=b(:,<span class="number">1</span>,<span class="number">7</span>);</span><br><span class="line">r1=sum((x-<span class="built_in">mean</span>(x)).*(y-<span class="built_in">mean</span>(y)));</span><br><span class="line">r2=<span class="built_in">sqrt</span>(sum((x-<span class="built_in">mean</span>(x)).^<span class="number">2</span>))*<span class="built_in">sqrt</span>(sum((y-<span class="built_in">mean</span>(y)).^<span class="number">2</span>));</span><br><span class="line">r=r1/r2</span><br><span class="line"><span class="comment">%或利用库函数来求样本相关系数</span></span><br><span class="line">rr=corrcoef(x,y)</span><br></pre></td></tr></table></figure></div>              </div>            </details>              </div>            </details>
              </div>
            </details>

<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p>这里先把图片全读进来（在a里）再二值化放到b里</p>
<div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="code"><pre><span class="line">a1=imread(<span class="string">&#x27;c:\Users\22251\Desktop\工程文件\数模\matlab-数据准备\000.bmp&#x27;</span>);</span><br><span class="line">[m,n]=<span class="built_in">size</span>(a1);</span><br><span class="line"></span><br><span class="line">dirname = <span class="string">&#x27;c:\Users\22251\Desktop\工程文件\数模\matlab-数据准备\ImageChips&#x27;</span>;</span><br><span class="line">files = dir(fullfile(dirname,<span class="string">&#x27;*.bmp&#x27;</span>));</span><br><span class="line">a=<span class="built_in">zeros</span>(m,n,<span class="number">19</span>);</span><br><span class="line">pic=[];</span><br><span class="line"><span class="keyword">for</span> f_n = <span class="number">1</span>:<span class="built_in">length</span>(files)</span><br><span class="line">    filename = fullfile(dirname,files(f_n).name);</span><br><span class="line">    a(:,:,f_n)=imread(filename);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%二值化</span></span><br><span class="line">a=double(a);</span><br><span class="line">b=a/<span class="number">255</span>;</span><br></pre></td></tr></table></figure></div>

<p>这里是构建rrs数组<br>本来我是准备用笨方法，类似于排序算法那种，疯狂的写flag值每一轮判断相关性一直要一直记住最大相关性的index与值，凭借之后进行下一轮比较。<br>想想都觉得非常麻烦啊，简化一下，创建一个数组变量<strong>arr[index，value]</strong>,第i轮直接比较 <strong>arr[i，value]</strong> 放进去。  </p>
<p>我的方法类似于数据结构中的有向图，我直接创建一个二维数组<strong>rr[,]</strong> ，<strong>rrs[i,j]</strong> 是i的最右列与j的最左列的相关性。<br>这样的话for循环就非常好写，最后直接遍历找相似的拼接就可以了</p>
<div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="code"><pre><span class="line">rrs=<span class="built_in">zeros</span>(<span class="number">19</span>,<span class="number">19</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">19</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="number">19</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">i</span>==<span class="built_in">j</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        x=b(:,<span class="number">72</span>,<span class="built_in">i</span>);</span><br><span class="line">        y=b(:,<span class="number">1</span>,<span class="built_in">j</span>);</span><br><span class="line">        r1=sum((x-<span class="built_in">mean</span>(x)).*(y-<span class="built_in">mean</span>(y)));</span><br><span class="line">        r2=<span class="built_in">sqrt</span>(sum((x-<span class="built_in">mean</span>(x)).^<span class="number">2</span>))*<span class="built_in">sqrt</span>(sum((y-<span class="built_in">mean</span>(y)).^<span class="number">2</span>));</span><br><span class="line">        rrs(<span class="built_in">i</span>,<span class="built_in">j</span>)=r1/r2;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div>
<p>一开始我是直接写flag_index&#x3D;1就准备开始遍历图进行拼接了，然后想到第一张图实际上不一定就是最左侧的。<br>看了一下我的rrs<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E6%95%B0%E6%A8%A1-%E6%8B%BC%E6%8E%A5%E5%9B%BE%E7%89%87/rrs.png"
                      alt="rrs"
                ><br>显然最左侧最右侧十分明显，不过我一开始以为<strong>NaN</strong>是null，因为我想当然的认为：<br>嗯，最右侧已经找不到最左侧能和它匹配了最左侧亦然。<br>但是  </p>
<ul>
<li>我写的是两个for i&#x3D;1:19,最左列和最右列是会比较的</li>
<li>拼接后的图片左右两侧有留白，所以最侧边的两给图片边缘列是无穷大的相似——<strong>NaN</strong><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%先找谁在最左边</span></span><br><span class="line"><span class="comment">%（i,:）最大值为0的在最左边</span></span><br><span class="line"><span class="comment">%更正：（:,i）最大值为0在最左边，因为是是文档截屏，最左最右是留白完全一样</span></span><br><span class="line">flag_index=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">19</span></span><br><span class="line">    temp_index=<span class="built_in">find</span>(rrs(:,<span class="built_in">i</span>)==<span class="built_in">max</span>(rrs(:,<span class="built_in">i</span>)));</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">max</span>(rrs(:,<span class="built_in">i</span>))==<span class="number">0</span></span><br><span class="line">        flag_index=temp_index;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">pic=[pic,a(:,:,flag_index)];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">19</span></span><br><span class="line">    temp_index=<span class="built_in">find</span>(rrs(flag_index,:)==<span class="built_in">max</span>(rrs(flag_index,:)));</span><br><span class="line">    pic=[pic,a(:,:,temp_index)];</span><br><span class="line">    flag_index=temp_index;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">double(pic);</span><br><span class="line"><span class="built_in">figure</span></span><br><span class="line">imshow(pic,[])</span><br></pre></td></tr></table></figure></div></li>
</ul>
<p>最后的结果</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E6%95%B0%E6%A8%A1-%E6%8B%BC%E6%8E%A5%E5%9B%BE%E7%89%87/%E7%BB%93%E6%9E%9C.png"
                      alt="结果"
                ></p>
<p>更新：最后一个for i&#x3D;1:19应该改成1:18,多拼了一次，结果图能看出来</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><details class="black" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>做完题目的一点想法 </summary>
              <div class='content'>
              <p>这里实际上也有点歪打正着，如果给的图片左右两侧并不是相同的情况呢？<br>那就不会出现<strong>NaN</strong>这样的<strong>特征值</strong>，最左侧和最右侧对比的相似度也会是一个看起来很正常的值<br><em><strong>这时候又要怎么做才能将整个图片拼接完成呢？</strong></em>   </p><p>我觉得可以<em><strong>队列式</strong></em>拼接，思路就是按照相关性的大小进行次序拼接，这样拼接到最后就是一个图片。  </p><p>如果你在想：”<strong>最左侧的最左列与最右侧最右列有可能相关性大于其他组的相关性</strong>“的话，那么这个依靠相关性判断相邻的方法从一开始就错了。这个问题是不需要考虑的。<br>而且，左右两侧不相同的情况下大概率不是黑白的二值图了，届时判断相关性的xy就不再是简单的0与1，最起码应该是0-225了，这样的可能性就几乎变成了抛硬币立起来的概率。</p>
              </div>
            </details>

<h3 id="解决了什么问题"><a href="#解决了什么问题" class="headerlink" title="解决了什么问题"></a>解决了什么问题</h3><ul>
<li>怎样将多个图片拼接成一个整体<ul>
<li>应该谁跟谁拼接？拼接的依据是什么，如何判断？</li>
</ul>
</li>
</ul>
<h3 id="得到了什么结果"><a href="#得到了什么结果" class="headerlink" title="得到了什么结果"></a>得到了什么结果</h3><ul>
<li>数组处理图像</li>
<li>第一次将数学知识在编程中运用<ul>
<li>相关性</li>
</ul>
</li>
<li>第一次将数据结构知识在编程中运用<ul>
<li>有向图</li>
</ul>
</li>
</ul>
<h3 id="形成了什么结论"><a href="#形成了什么结论" class="headerlink" title="形成了什么结论"></a>形成了什么结论</h3><ul>
<li>图像二值化可以有效减少运算量<ul>
<li>精度不高的彩色图像处理可以考虑先二值化</li>
</ul>
</li>
<li>图像处理时需要注意是否有特征性的留白<ul>
<li>文字图片左右侧可能有留白</li>
</ul>
</li>
<li>相关系数用来判断相似的可行性分析</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>介绍说的<em><strong>突然感觉打通任督二脉</strong></em>主要就是说上面那里用了<strong>有向图</strong>的思想，相关性不正是<strong>权值</strong>嘛。<br>而且解决的也确实是有关于图的问题hh</p>
<p>说到图的话，那么先后拼接图片的顺序貌似也能弄成邻接矩阵啊<br>不过细想一下又觉得在这里没有什么必要</p>
<ul>
<li>麻烦，牛刀杀鸡</li>
<li>我觉得邻接矩阵与邻接表的主要功能更应该是建立xxx的拓扑结构,显然这里需要做到的并不是建立拓扑而是单纯的排序</li>
</ul>
<p>如果你有什么想法欢迎与我交流讨论！</p>
]]></content>
      <categories>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>数模</tag>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>spring学习(一)</title>
    <url>/2023/03/25/spring%E5%AD%A6%E4%B9%A0(%E4%B8%80)/</url>
    <content><![CDATA[<a class="button  regular" href='https://www.docs4dev.com/docs/zh/spring-framework/5.1.3.RELEASE/reference' title='spring中文文档'><i class='fa-solid fa-arrow-right'></i> spring中文文档</a>

<h1 id="spring的概述"><a href="#spring的概述" class="headerlink" title="spring的概述"></a>spring的概述</h1><a class="button  regular" href='https://zhuanlan.zhihu.com/p/392443841' title='spring的概述'><i class='fa-solid fa-arrow-right'></i> spring的概述</a>

<h2 id="spring是什么"><a href="#spring是什么" class="headerlink" title="spring是什么"></a>spring是什么</h2><p>简单点概括就是框架，之前学java时有讲到工厂模式，这个就是结合工厂模式，把不必要的重复性的东西放到框架里，你要使用就只用把框架对好，往里填充东西就🆗。<br>Spring是一个免费开源的轻量级的，IOC，AOP为特点的轻量级框架！</p>
<h2 id="spring的两大核心"><a href="#spring的两大核心" class="headerlink" title="spring的两大核心"></a>spring的两大核心</h2><ul>
<li>面向方面编程(AOP)</li>
<li>控制反转(IOC)容器</li>
</ul>
<h2 id="spring的发展历程和优势"><a href="#spring的发展历程和优势" class="headerlink" title="spring的发展历程和优势"></a>spring的发展历程和优势</h2><h2 id="spring体系结构"><a href="#spring体系结构" class="headerlink" title="spring体系结构"></a>spring体系结构</h2><h1 id="程序的耦合及解耦"><a href="#程序的耦合及解耦" class="headerlink" title="程序的耦合及解耦"></a>程序的耦合及解耦</h1><h2 id="曾经案例中问题"><a href="#曾经案例中问题" class="headerlink" title="曾经案例中问题"></a>曾经案例中问题</h2><h2 id="工厂模式解耦"><a href="#工厂模式解耦" class="headerlink" title="工厂模式解耦"></a>工厂模式解耦</h2><h1 id="IOC概念和spring中的IOC"><a href="#IOC概念和spring中的IOC" class="headerlink" title="IOC概念和spring中的IOC"></a>IOC概念和spring中的IOC</h1><h2 id="spring中基于XML的IOC环境搭建"><a href="#spring中基于XML的IOC环境搭建" class="headerlink" title="spring中基于XML的IOC环境搭建"></a>spring中基于XML的IOC环境搭建</h2><h1 id="依赖注入-DI——Dependency-Injection"><a href="#依赖注入-DI——Dependency-Injection" class="headerlink" title="依赖注入(DI——Dependency Injection)"></a>依赖注入(DI——Dependency Injection)</h1><p>由容器动态的将某个依赖关系注入到组件之中。</p>
<h1 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h1>]]></content>
      <categories>
        <category>Java</category>
        <category>spring</category>
      </categories>
      <tags>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS打开mxd文件无法显示的问题</title>
    <url>/2023/03/14/mxd%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<details class="yellow" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>解决办法 </summary>
              <div class='content'>
              <p>如图，将mxd文件托进来之后工作空间仍无图像<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/mxd%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/1.png"
                      alt="1"
                ><br>注意看这里，我们可以看到这里有看红色感叹号，此时对图层右键的话很多功能无法正常使用<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/mxd%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/2.png"
                      alt="2"
                ><br>把框框里的勾取消再点，会让你选择文件，这里选择对应的shp文件，点击确定<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/mxd%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/3.png"
                      alt="3"
                ><br>其他图层也自动定位了，现在可以正常工作了<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/mxd%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/4.png"
                      alt="4"
                ></p>
              </div>
            </details>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>原因 </summary>
              <div class='content'>
              <p><strong>数据路径有问题。</strong><br>ArcGIS中的.mxd地图文档文件虽然含有各类图层，但其实际上仅仅包含了对这些图层的引用，而非图层数据本身；图层数据还是存储在其各自的.shp文件或地理数据库中。<br>因此，一旦我们导入一个新的.mxd地图文档文件（例如从其他电脑中拷贝过来的一个.mxd地图文档文件），就可能导致ArcMap软件虽然知道这个.mxd地图文档文件应该包含有哪些图层（即可以显示图层数量与图层名称），但是这些图层的具体数据ArcMap软件没有办法找到（即在图层名称左侧出现红色感叹号）。</p>
              </div>
            </details>

<a class="button  regular" href='https://baijiahao.baidu.com/s?id=1746372843012256129' title='更详细的解释与操作'><i class='fa-solid fa-play-circle'></i> 更详细的解释与操作</a>

]]></content>
      <categories>
        <category>GIS</category>
        <category>ArcGIS</category>
        <category>Problems</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
        <tag>Problems</tag>
      </tags>
  </entry>
  <entry>
    <title>ryujinx在线版(LDN版)</title>
    <url>/2023/04/12/ryujinx%E5%9C%A8%E7%BA%BF%E7%89%88/</url>
    <content><![CDATA[<h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><a class="button  large center" href='https://www.bilibili.com/read/cv20541633/' title='Switch模拟器Ryujinx联网版官方中文入门教程（含最新KEY和固件）'><i class='fa-brands fa-bilibili'></i> Switch模拟器Ryujinx联网版官方中文入门教程（含最新KEY和固件）</a>

<a class="button  regular" href='https://ryujinx.org/download' title='官方下载地址'><i class='fa-solid fa-cloud-arrow-down'></i> 官方下载地址</a>

<p>密钥:<a class="link"   href="https://prodkeys.net/ryujinx-prod-keys/" >Ryujinx Prod Keys v15.0.1 Latest File Download <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>固件:<a class="link"   href="https://prodkeys.net/switch-firmwares/" >Latest Switch Firmwares Download V16.0.0 (prodkeys.net) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h1 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h1><a class="button  large center" href='https://www.bilibili.com/video/BV1mD4y1x77t/?share_source=copy_web&vd_source=e7a3b9bafd0572f40c66626ff7445e15' title='Switch模拟器 Ryujinx模拟器 如何安装DLC更新跟金手指的使用方法'><i class='fa-brands fa-bilibili'></i> Switch模拟器 Ryujinx模拟器 如何安装DLC更新跟金手指的使用方法</a>

<p>记得</p>
<p>选项-&gt;设置-&gt;系统</p>
<p>设置<strong>区域</strong>为 美&#x2F;日 ，<strong>语言</strong>选简中&#x2F;繁中  </p>
<p><code>这里记得往下翻，上面的两个是无效的</code></p>
<p>不然进游戏不是中文哦  </p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/ryujinx%E5%9C%A8%E7%BA%BF%E7%89%88/lang.png"
                     
                ></p>
<h1 id="游戏资源"><a href="#游戏资源" class="headerlink" title="游戏资源"></a>游戏资源</h1><p>微信公众号：NS头号玩家</p>
<p>这里的资源非常离谱之多，足有7000+ ！！！</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/ryujinx%E5%9C%A8%E7%BA%BF%E7%89%88/gamelist.png"
                      alt="gamelist"
                ></p>
<p>而且每个月还在更新！</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/ryujinx%E5%9C%A8%E7%BA%BF%E7%89%88/gamelist_update.png"
                      alt="gamelist_update"
                ></p>
<p>只能说是非常nb啊</p>
<p>这个公众号还有蛮多其他工具，不过我暂时还没用过。</p>
<p><strong>来自</strong> ：【龙神ryujinx模拟器联机一起打游戏，属于我们自己的开黑屋】 <a class="link"   href="https://www.bilibili.com/video/BV1cg411i7k1/?share_source=copy_web&vd_source=e7a3b9bafd0572f40c66626ff7445e15" >https://www.bilibili.com/video/BV1cg411i7k1/?share_source=copy_web&amp;vd_source=e7a3b9bafd0572f40c66626ff7445e15 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>github上的大佬做的文件转换工具，这个工具很完备了，配合之前的WiiU_WUP转Loadiine工具，几个模拟器基本都可以畅行了hhhh</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/ryujinx%E5%9C%A8%E7%BA%BF%E7%89%88/SAK_munu.png"
                     
                ></p>
<p><a class="link"   href="https://github.com/dezem/SAK" >dezem&#x2F;SAK: Switch Army Knife (SAK) (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><strong>注意！</strong></p>
<p>SAK下在好之后要把前面一步下载的密钥文件”prod.keys”放到bin目录下</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/ryujinx%E5%9C%A8%E7%BA%BF%E7%89%88/SAK_keyloc.png"
                     
                ></p>
]]></content>
      <categories>
        <category>Game</category>
      </categories>
      <tags>
        <tag>Switch</tag>
      </tags>
  </entry>
  <entry>
    <title>制谱软件</title>
    <url>/2023/04/01/%E5%88%B6%E8%B0%B1%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<p>昨天晚上练习《赛马》的时候突然想起了赛马新编，想练习一下，于是去找了葫芦丝的赛马变奏曲，结果网上完全找不到！一搜索出来的全是《赛马》的谱子 <del>早就会了好么</del> 唉，b站上找也只找到一个动态谱和一些表演的视频。<br>动态谱  </p>
<a class="button  large center" href='https://www.bilibili.com/video/BV1Ev4y1677t/?share_source=copy_web&vd_source=e7a3b9bafd0572f40c66626ff7445e15' title='葫芦丝动态歌谱演奏《赛马变奏曲》欣赏，二胡名曲吹的太好听了'><i class='fa-solid fa-arrow-right'></i> 葫芦丝动态歌谱演奏《赛马变奏曲》欣赏，二胡名曲吹的太好听了</a>

<p>干脆自己做谱子算了，找了半天在线制谱和软件，最后找到这个软件还可以，就是可惜免费版许多功能不能用，唉。</p>
<a class="button  large center" href='http://www.happyeo.com/register_jpw.htm' title='官方下载地址'><i class='fa-solid fa-arrow-right'></i> 官方下载地址</a>

<p>正好上午上竞赛课上的头疼，就对着视频做了谱子</p>
 <details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>图片及演示视频 </summary>
              <div class='content'>
              <p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%88%B6%E8%B0%B1%E8%BD%AF%E4%BB%B6/1.png"
                      alt="1"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%88%B6%E8%B0%B1%E8%BD%AF%E4%BB%B6/2.png"
                      alt="2"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%88%B6%E8%B0%B1%E8%BD%AF%E4%BB%B6/3.png"
                      alt="3"
                ></p><p><video src="/videos/制谱软件/赛马变奏曲.mkv" width="800px" height="600px" controls="controls"></video> </p>
              </div>
            </details>


<p> 不过刚才去找破解发现有人说作曲大师2019？<br> <a class="link"   href="https://tieba.baidu.com/p/5561697697" >https://tieba.baidu.com/p/5561697697 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>  </p>
<a class="button  regular" href='https://www.image-line.com/fl-studio-download/' title='作曲大师21.0版下载(有中文)'><i class='fa-solid fa-arrow-right'></i> 作曲大师21.0版下载(有中文)</a>
<p>试了一下，只能说是牛刀杀鸡，还是上面那个好。</p>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>两个蛮有意思的视频</title>
    <url>/2023/07/06/%E4%B8%A4%E4%B8%AA%E8%9B%AE%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E8%A7%86%E9%A2%91/</url>
    <content><![CDATA[<h2 id="AI精准分割视频物体"><a href="#AI精准分割视频物体" class="headerlink" title="AI精准分割视频物体"></a>AI精准分割视频物体</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
    <iframe src="//player.bilibili.com/player.html?aid=445591636&bvid=BV1Yj411U7Au&cid=1185142757&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>
</div>


<h2 id="DragGAN-核弹级开源免费AI技术"><a href="#DragGAN-核弹级开源免费AI技术" class="headerlink" title="DragGAN 核弹级开源免费AI技术"></a>DragGAN 核弹级开源免费AI技术</h2><p>有大佬在issue区给了个解压就能使用的包</p>
<a class="button  regular" href='https://github.com/zhaoyun0071/DragGAN-Windows-GUI' title='DragGAN离线工具'><i class='fa-brands fa-github'></i> DragGAN离线工具</a>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
    <iframe src="//player.bilibili.com/player.html?aid=870200608&bvid=BV1vV4y1y7kc&cid=1176727245&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>
</div>
]]></content>
      <categories>
        <category>essay</category>
      </categories>
      <tags>
        <tag>essay</tag>
      </tags>
  </entry>
  <entry>
    <title>关闭windows自动更新</title>
    <url>/2023/03/26/%E5%85%B3%E9%97%ADwindows%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<a class="button  large center" href='https://www.abackup.com/easybackup-tutorials/how-to-stop-windows-10-update-automatically-666.html' title='关闭Windows自动更新的6个方法'><i class='fa-solid fa-arrow-right'></i> 关闭Windows自动更新的6个方法</a>



<p>我这里使用第二种方法，结果发现报错<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%85%B3%E9%97%ADwindows%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/error.png"
                      alt="Error"
                ></p>
<p>网上查询发现是因为Windows系统版本是家庭版，不具备这个功能</p>
<a class="button  large center" href='https://zhuanlan.zhihu.com/p/403961135' title='找不到 gpedit.msc 的最优解决办法'><i class='fa-solid fa-arrow-right'></i> 找不到 gpedit.msc 的最优解决办法</a>]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title>升级Hexo</title>
    <url>/2023/03/30/%E5%8D%87%E7%BA%A7Hexo/</url>
    <content><![CDATA[<p>主要是Hexo更新的问题和Hexo本地预览时的端口占用</p>
<h1 id="Hexo更新"><a href="#Hexo更新" class="headerlink" title="Hexo更新"></a>Hexo更新</h1><p>找了蛮多，这个写的蛮清晰<br><a class="link"   href="https://blog.csdn.net/qq_33154343/article/details/108301374" >https://blog.csdn.net/qq_33154343/article/details/108301374 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h1 id="端口占用"><a href="#端口占用" class="headerlink" title="端口占用"></a>端口占用</h1><h2 id="杀进程"><a href="#杀进程" class="headerlink" title="杀进程"></a>杀进程</h2><p><a class="link"   href="https://www.mpc6.com/coding/45.html" >https://www.mpc6.com/coding/45.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="项目换端口"><a href="#项目换端口" class="headerlink" title="项目换端口"></a>项目换端口</h2><p><a class="link"   href="https://blog.csdn.net/weixin_45627031/article/details/108359235" >https://blog.csdn.net/weixin_45627031/article/details/108359235 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Problems</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
        <tag>Problems</tag>
      </tags>
  </entry>
  <entry>
    <title>图与网络模型及方法</title>
    <url>/2023/07/21/%E5%9B%BE%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E5%8F%8A%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="图与网络模型及方法"><a href="#图与网络模型及方法" class="headerlink" title="图与网络模型及方法"></a>图与网络模型及方法</h2><h3 id="基本背景"><a href="#基本背景" class="headerlink" title="基本背景"></a>基本背景</h3><p>图论起源于 18 世纪。第一篇图论论文是瑞上数学家欧拉于 1736 年发表的</p>
<details class="gray" data-header-exclude=""><summary><i class="fa-solid fa-chevron-right"></i>“哥尼斯堡的七座桥” </summary>
              <div class="content">
              <p><img lazyload="" src="/images/loading.svg" data-src="C:\Users\22251\AppData\Roaming\Typora\typora-user-images\image-20230721142030829.png" alt="image-20230721142030829"></p><p><img lazyload="" src="/images/loading.svg" data-src="C:\Users\22251\AppData\Roaming\Typora\typora-user-images\image-20230721140929651.png" alt="image-20230721140929651"></p><p>欧拉：七桥问题无解</p><p>无法“一笔画”，因为都是奇数点</p><p><a class="link" href="https://zhuanlan.zhihu.com/p/389188296">秒杀行测图形推理！你不可不知的一笔画小tips - 知乎 (zhihu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
              </div>
            </details>

<p>1847年，克希霍夫为了给出电网络方程而引进了“树”的概念。1857 年，凯莱在计数烷 C <del>n</del> H,,的同分异构物时，也发现了“树”。哈密尔顿于 1859 年提出“周游世界”游戏，用图论的术语，就是如何找出一个连通图中的生成圈近几十年来，由于计算机技术和科学的飞速发展，大大<br>地促进了图论研究和应用，图论的理论和方法已经渗透<br>到物理、化学、通讯科学、建筑学、运筹学、生物遗传<br>学、心理学、经济学、社会学等学科中。</p>
<p>图论中所谓的“图”是指<em>某类具体事物和这些事物之间的联系</em>。如果我们用点表示这些具体事物，用连接两点的线段 (直的或曲的) 表示两个事物的特定的联系，就得到了描述这个“图”的几何形象。图论为任何一个包合了一种二元关系的离散系统提供了一个数学模型，借助于图论的概念、理论和方法，可以对该模型求解。哥尼斯堡七桥问题就是一个典型的例子</p>
<h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><h4 id="图-项点集-边集"><a href="#图-项点集-边集" class="headerlink" title="图 项点集 边集"></a>图 项点集 边集</h4><p>所谓的图，直观地讲就是在平面上n个点，把其中的些点对用曲线或直线连接起来，不考虑点的位置与连线曲直长短，这样形成一个关系结构就是一个<strong>图</strong>。记成<strong>G=(V,E)<strong>，V是以上述点为元素的</strong>顶点集</strong>，E是以上述连线为元素的<strong>边集</strong>。</p>
<div class="note default"><p>G graph; V vertex; E edge</p>
</div>
<h4 id="有向图-无向图-混合图"><a href="#有向图-无向图-混合图" class="headerlink" title="有向图 无向图 混合图"></a>有向图 无向图 混合图</h4><p><em>如果各条边都加上方向，则称为 <strong>有向图</strong>  ，否则称为 <strong>无向图</strong> 。如果有的边有方向，有的边无方向，则称为 <strong>混合图</strong> 。</em></p>
<h4 id="简单图-完全图-非完全图"><a href="#简单图-完全图-非完全图" class="headerlink" title="简单图 完全图 非完全图"></a>简单图 完全图 非完全图</h4><p>*如果任两顶点间最多有一条边，且每条边的两个端点皆不重合的图，称为 <strong>简单图</strong> *</p>
<p><em>如果图的两顶点间有边相连，则称此两顶点 <strong>相邻</strong> .每一对顶点都相邻的图称为 <strong>完全图</strong> ，否则称为 <strong>非完全图</strong> ，完全图记为K<sub>|n|</sub>。</em></p>
<h4 id="二分图-完全二分图"><a href="#二分图-完全二分图" class="headerlink" title="二分图 完全二分图"></a>二分图 完全二分图</h4><p>若V=X  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.564ex;" xmlns="http://www.w3.org/2000/svg" width="1.885ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 833 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="22C3" d="M96 750Q103 750 109 748T120 744T127 737T133 730T137 723T139 718V395L140 73L142 60Q159 -43 237 -104T416 -166Q521 -166 597 -103T690 60L692 73L694 718Q708 749 735 749Q765 749 775 720Q777 714 777 398Q777 78 776 71Q766 -51 680 -140Q571 -249 416 -249H411Q261 -249 152 -140Q66 -51 56 71Q55 78 55 398Q55 714 57 720Q60 734 70 740Q80 750 96 750Z"></path></g></g></g></svg></mjx-container>  Y，X <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.564ex;" xmlns="http://www.w3.org/2000/svg" width="1.885ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 833 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="22C2" d="M139 -217Q127 -241 114 -246Q106 -249 97 -249Q67 -249 57 -220Q55 -214 55 102Q55 152 55 221T54 312Q54 422 60 464T91 554Q120 612 165 654T257 714T337 741T392 749Q393 750 402 750Q414 750 422 749Q557 749 660 659T776 430Q777 422 777 102Q777 -214 775 -220Q765 -249 735 -249Q716 -249 708 -241T694 -217L692 428L690 441Q674 540 597 603T416 666H409Q388 666 364 662T294 638T212 581Q156 523 142 441L140 428L139 105V-217Z"></path></g></g></g></svg></mjx-container> Y=重，|X|·|Y|≠ 0（这里|X|表示顶点集X中元素的个数)，且X中无相邻的顶点对，Y中亦然，则称图G为<strong>二分图</strong>;特别地，若对任意u∈X，u与Y中每个顶点相邻，则称图G为<strong>完全二分图</strong>，记为K<sub>|X|,|Y|</sub>。</p>
<h4 id="顶点的度-奇顶点-偶顶点"><a href="#顶点的度-奇顶点-偶顶点" class="headerlink" title="顶点的度 奇顶点 偶顶点"></a>顶点的度 奇顶点 偶顶点</h4><p>设v∈V是边e ∈ E的端点，则称y与e相关联，与顶点v关联的边数称为该<strong>顶点的度</strong>，记为d(v)，度为奇数的顶点称为<strong>奇顶点</strong>，度为偶数的顶点称为<strong>偶顶点</strong>。可以证明<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.046ex;" xmlns="http://www.w3.org/2000/svg" width="8.152ex" height="2.742ex" role="img" focusable="false" viewBox="0 -750 3603.3 1212.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(485,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mo" transform="translate(1921,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2310,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(3096,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></g></svg></mjx-container> d(v)=2|E|，即所有顶点的度数之和是边数的两倍且由此可知奇顶点的总数是偶数(d-degree)</p>
<h4 id="轨道-回路-圈-连通图"><a href="#轨道-回路-圈-连通图" class="headerlink" title="轨道 回路 圈 连通图"></a>轨道 回路 圈 连通图</h4><p>设w=v<del>0</del>e<del>1</del>v<del>1</del>e<del>2</del>···e<del>k</del>v<del>k</del>，其中e<del>i</del>∈E,1≤i≤k,v<del>j</del>∈V,0≤j≤k，e<del>i</del>与v-和v<del>i-1</del>关联，称W是图G的一条道路，k为路长，v<del>0</del>为起点，v<del>k</del>为终点; 各边相异的道路称为迹:各顶点相异的道路称为<strong>轨道</strong>。若W是一轨道，可记为P(v<del>0</del>,v<del>k</del>);起点与终点重合的道路称为<strong>回路</strong>;起点与终点重合的轨道称为<strong>圈</strong>，即对轨道P(v<del>0</del>,v<del>k</del>)，当v<del>0</del>=v<del>k</del>时成为一圈;图中任两顶点之间都存在道路的图，称为<strong>连通图</strong>。图中含有所有顶点的轨道称为* Hamilton 轨<em>，闭的 Hamilton 轨称为 <em>Hamilton 圈</em>；含有 Hamilton 圈的图称为</em> Hamilton 图*。</p>
<p>称两顶点u,v分别为起点和终点的最短轨道之长为顶点u，v的距离;在完全二分图K<del>|X|,|Y|</del>中，X中两顶点之间的距离为偶数，X中的顶点与Y中的顶点的距离为奇数。</p>
<h4 id="赋权图"><a href="#赋权图" class="headerlink" title="赋权图"></a>赋权图</h4><p>赋权图是指每条边都有一个(或多个)实数对应的图这个(些)实数称为这条边的<strong>权</strong>(每条边可以具有多个权）<br>赋权图在实际问题中非常有用。根据不同的实际情况，权数的含义可以各不相同。例如，可用权数代表两地之间的实际距离或行车时间，也可用权数代表某工序所男的加工时间等。</p>
<h5 id="邻接矩阵表示法"><a href="#邻接矩阵表示法" class="headerlink" title="邻接矩阵表示法"></a>邻接矩阵表示法</h5><p>邻接矩阵是表示顶点之间相邻关系的矩阵</p>
<p>邻接矩阵记作W=(w<del>ij</del>)<del>n*n</del></p>
<p>当G为赋权图时</p>
<p>$$ W_{ij}=\left{<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.616ex;" xmlns="http://www.w3.org/2000/svg" width="59.033ex" height="2.363ex" role="img" focusable="false" viewBox="0 -772.1 26092.6 1044.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,22.1)"><g data-mml-node="mtd"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">权</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">值</text></g></g><g data-mml-node="mtd" transform="translate(3000,0)"></g><g data-mml-node="mtd" transform="translate(4000,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">当</text></g><g data-mml-node="msub" transform="translate(1000,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(1812,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">与</text></g><g data-mml-node="msub" transform="translate(2812,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mi" transform="translate(3671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">之</text></g><g data-mml-node="mi" transform="translate(4671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mi" transform="translate(5671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">有</text></g><g data-mml-node="mi" transform="translate(6671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">边</text></g><g data-mml-node="mi" transform="translate(7671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g></g><g data-mml-node="mtext" transform="translate(8671.3,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(8921.3,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mi" transform="translate(9421.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">或</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10421.3,0)"><g data-mml-node="mo"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(16421.3,0)"></g><g data-mml-node="mtd" transform="translate(17421.3,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">当</text></g><g data-mml-node="msub" transform="translate(1000,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(1812,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">与</text></g><g data-mml-node="msub" transform="translate(2812,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mi" transform="translate(3671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">之</text></g><g data-mml-node="mi" transform="translate(4671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mi" transform="translate(5671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">无</text></g><g data-mml-node="mi" transform="translate(6671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">边</text></g><g data-mml-node="mi" transform="translate(7671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g></g></g></g></g></g></g></svg></mjx-container> \right. $$</p>
<p>当G为非赋权图时</p>
<p>$$ W_{ij}=\left{<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.616ex;" xmlns="http://www.w3.org/2000/svg" width="51.114ex" height="2.363ex" role="img" focusable="false" viewBox="0 -772.1 22592.6 1044.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,22.1)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mtd" transform="translate(1500,0)"></g><g data-mml-node="mtd" transform="translate(2500,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">当</text></g><g data-mml-node="msub" transform="translate(1000,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(1812,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">与</text></g><g data-mml-node="msub" transform="translate(2812,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mi" transform="translate(3671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">之</text></g><g data-mml-node="mi" transform="translate(4671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mi" transform="translate(5671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">有</text></g><g data-mml-node="mi" transform="translate(6671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">边</text></g><g data-mml-node="mi" transform="translate(7671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g></g><g data-mml-node="mtext" transform="translate(8671.3,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(8921.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtd" transform="translate(12921.3,0)"></g><g data-mml-node="mtd" transform="translate(13921.3,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">当</text></g><g data-mml-node="msub" transform="translate(1000,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(1812,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">与</text></g><g data-mml-node="msub" transform="translate(2812,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mi" transform="translate(3671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">之</text></g><g data-mml-node="mi" transform="translate(4671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mi" transform="translate(5671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">无</text></g><g data-mml-node="mi" transform="translate(6671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">边</text></g><g data-mml-node="mi" transform="translate(7671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g></g></g></g></g></g></g></svg></mjx-container> \right. $$</p>
<p>![image-20230721144846965](C:\Users\22251\AppData\Roaming\Typora\typora-user-images\image-20230721144846965.png</p>
<p><img lazyload="" src="/images/loading.svg" data-src="C:\Users\22251\AppData\Roaming\Typora\typora-user-images\image-20230721145143608.png" alt="image-20230721145143608"></p>
<h5 id="稀疏矩阵表示法"><a href="#稀疏矩阵表示法" class="headerlink" title="稀疏矩阵表示法"></a>稀疏矩阵表示法</h5><p>稀疏矩阵是指矩陈中零元素很多，非零元素很少的矩阵对于稀疏矩阵，只要存放非零元素的行标、列标、非零元素的值即可，可以按如下方式存儒(非零元素的行地址，非零元素的列地址)，非零元素的值</p>
<p><img lazyload="" src="/images/loading.svg" data-src="C:\Users\22251\AppData\Roaming\Typora\typora-user-images\image-20230721152102189.png" alt="image-20230721152102189"></p>
<p>(1)令I(u<del>0</del>)=0,对v≠u<del>0</del>，令l(v) = ∞, S<del>0</del> ={u<del>0</del>},i=0<br>(2)对每个v属于<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.127ex" height="2.669ex" role="img" focusable="false" viewBox="0 -1022 940 1179.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mover"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(0,637)"><svg width="940" height="237" x="0" y="148" viewBox="235 148 940 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.82,1)"></path></svg></g></g></g></g></svg></mjx-container> (<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.127ex" height="2.669ex" role="img" focusable="false" viewBox="0 -1022 940 1179.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mover"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(0,637)"><svg width="940" height="237" x="0" y="148" viewBox="235 148 940 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.82,1)"></path></svg></g></g></g></g></svg></mjx-container> =V\S<del>i</del>),用<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.984ex;" xmlns="http://www.w3.org/2000/svg" width="3.771ex" height="3.498ex" role="img" focusable="false" viewBox="0 -669 1667 1546.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="TeXAtom" data-mjx-texclass="OP"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"></path></g></g><g data-mml-node="TeXAtom" transform="translate(63.1,-665.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="msub" transform="translate(1239,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></g></svg></mjx-container>{l(v),l(u)+w(uv)}代替l(v),这里w(uv)表示顶点u和v之间边的权值。计算把达到这个最小值的一个顶点记为u<del>i+1</del>，令 S<del>i+1</del>=S <del>i</del> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.509ex" height="1.403ex" role="img" focusable="false" viewBox="0 -598 667 620"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="222A" d="M591 598H592Q604 598 611 583V376Q611 345 611 296Q610 162 606 148Q605 146 605 145Q586 68 507 23T333 -22Q268 -22 209 -1T106 66T56 173Q55 180 55 384L56 585Q66 598 75 598Q85 598 95 585V378L96 172L98 162Q112 95 181 57T332 18Q415 18 487 58T570 175Q571 180 571 383V583Q579 598 591 598Z"></path></g></g></g></svg></mjx-container> {u<del>i+1</del>}.<br>(3) 若i=|V|-1，停止;若i&lt;|V|-1，用i+1代替i，转(2).</p>
<p>算法结束时，从u<del>0</del>到各顶点v的距离由v的最后一次标号I(v)给出。在v进入S<del>i</del>之前的标号I(v)叫 T 标号，进入S<del>i</del>时的标号I(v)叫P标号。</p>
<div class="note-large blue"><div class="notel-title"><p>例</p>
</div><div class="notel-content"><p>某公司在六个城市c<del>1</del>,c<del>2</del>,···,c<del>6</del>,中有分公司,从c<del>i</del>到c<del>j</del>的直接航程票价记在下述矩阵的(i,j)位置上(∞表示无直接航路)，请帮助该公司设计一张城市c<del>1</del>到其他城市间的票价最便宜的路线图<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="146.62ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 64806 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mtable" transform="translate(278,0)"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mtd" transform="translate(1500,0)"><g data-mml-node="mn"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(3500,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(5500,0)"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(7500,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(9500,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mtext" transform="translate(1000,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(1250,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(12750,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mtd" transform="translate(14250,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(16250,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(18250,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(20250,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g><g data-mml-node="mtext" transform="translate(1000,0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1250,0)"><g data-mml-node="mo"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(23500,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(25500,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mtd" transform="translate(27000,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(29000,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(31000,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g><g data-mml-node="mtext" transform="translate(1000,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(1250,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(34250,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(36250,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(38250,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mtd" transform="translate(39750,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(41750,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g><g data-mml-node="mtext" transform="translate(1000,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(1250,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(45000,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(47000,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(49000,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(51000,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mtd" transform="translate(52500,0)"><g data-mml-node="mn"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g><g data-mml-node="mtext" transform="translate(1000,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(1250,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(55750,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(57750,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(59750,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(61750,0)"><g data-mml-node="mn"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mtd" transform="translate(63750,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(64528,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></svg></mjx-container></p>
</div></div>

<p>用矩阵 a<del>n*n</del> (n为顶点个数)存放各边权的邻接矩阵,行向量<em>pb、index<del>1</del>、index<del>2</del>,、d</em>分别用来存放P标号信息标号顶点顺序、标号顶点索引、最短通路的值。其中分量</p>
<p>​					$$ pb_{(i)}=\left{<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="71.136ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 31442 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtd" transform="translate(1500,0)"></g><g data-mml-node="mtd" transform="translate(2500,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">当</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">第</text></g><g data-mml-node="mi" transform="translate(2000,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">顶</text></g><g data-mml-node="mi" transform="translate(3345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">点</text></g><g data-mml-node="mi" transform="translate(4345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(5345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">标</text></g><g data-mml-node="mi" transform="translate(6345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g><g data-mml-node="mi" transform="translate(7345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">已</text></g><g data-mml-node="mi" transform="translate(8345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">成</text></g><g data-mml-node="mi" transform="translate(9345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(10345,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(11096,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">标</text></g><g data-mml-node="mi" transform="translate(12096,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g></g><g data-mml-node="mtext" transform="translate(13096,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(13346,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mtd" transform="translate(17346,0)"></g><g data-mml-node="mtd" transform="translate(18346,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">当</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">第</text></g><g data-mml-node="mi" transform="translate(2000,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">顶</text></g><g data-mml-node="mi" transform="translate(3345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">点</text></g><g data-mml-node="mi" transform="translate(4345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(5345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">标</text></g><g data-mml-node="mi" transform="translate(6345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g><g data-mml-node="mi" transform="translate(7345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">未</text></g><g data-mml-node="mi" transform="translate(8345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">成</text></g><g data-mml-node="mi" transform="translate(9345,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(10345,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(11096,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">标</text></g><g data-mml-node="mi" transform="translate(12096,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g></g></g></g></g></g></g></svg></mjx-container> \right. $$</p>
<p>index<del>2</del>(i) 存放始点到第i顶点最短通路中第i顶点前<br>顶点的序号;<br>d(i) 存放由始点到第i项点最短通路的值.<br>求得c<del>1</del>到c<del>2</del>,···,c<del>6</del>的最便宜票价分别为35，45，35，25，10。</p>
<h4 id="两个指定顶点之间最短路问题的数学规划模型"><a href="#两个指定顶点之间最短路问题的数学规划模型" class="headerlink" title="两个指定顶点之间最短路问题的数学规划模型"></a>两个指定顶点之间最短路问题的数学规划模型</h4><p>假设有向图有n个顶点，现需要求从顶点v<del>1</del>到顶点v<del>n</del>的最短路。设W =(w<del>ij</del>)<del>n*n</del>为邻接矩阵，其分量为</p>
<p>$$ w_{ij}=\left{<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.616ex;" xmlns="http://www.w3.org/2000/svg" width="37.509ex" height="2.363ex" role="img" focusable="false" viewBox="0 -772.1 16579.1 1044.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,22.1)"><g data-mml-node="mtd"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">边</text></g><g data-mml-node="msub" transform="translate(1000,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(1812,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mi" transform="translate(2671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(3671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">权</text></g><g data-mml-node="mi" transform="translate(4671.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">值</text></g></g><g data-mml-node="mtd" transform="translate(6671.3,0)"></g><g data-mml-node="mtd" transform="translate(7671.3,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(812,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(1949.1,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2893.8,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g></g><g data-mml-node="mtext" transform="translate(3657.8,0)"><path data-c="A0" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3907.8,0)"><g data-mml-node="mo"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g><g data-mml-node="mtd" transform="translate(13579.1,0)"></g><g data-mml-node="mtd" transform="translate(14579.1,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">他</text></g></g></g></g></g></g></g></svg></mjx-container> \right. $$</p>
<p>决策变量为x<del>ij</del>，当x<del>ij</del> =1，说明弧v<del>i</del>v<del>j</del>位于顶点至顶点v<del>n</del>的最短路上;否则 x<del>ij</del> = 0。</p>
<p>其数学规划表达式为</p>
<pre><code>  ${min}\sum_{v_iv_j∈E}{w_{ij}x_{ij}}$
</code></pre>
<p>$$ {s.t.}\sum^n_{j=1，v_iv_j∈E}{x_{ij}}-\sum^n_{j=1,v_iv_j∈E}{x_{ij}}=\left{<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="38.242ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 16902.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtd" transform="translate(1500,0)"></g><g data-mml-node="mtd" transform="translate(2500,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(622.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1678.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtext" transform="translate(2178.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(2650.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(3651,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtd" transform="translate(7651,0)"></g><g data-mml-node="mtd" transform="translate(8651,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(622.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1678.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mtext" transform="translate(2278.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(2528.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mtd" transform="translate(12679.6,0)"></g><g data-mml-node="mtd" transform="translate(13679.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(622.8,0)"><path data-c="2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path></g><g data-mml-node="mn" transform="translate(1678.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2178.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2623.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></g></g></svg></mjx-container> \tag{<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex;" xmlns="http://www.w3.org/2000/svg" width="2.693ex" height="1.666ex" role="img" focusable="false" viewBox="0 -442 1190.3 736.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container>=0或1} \right. $$</p>
<h5 id="有向"><a href="#有向" class="headerlink" title="有向"></a>有向</h5><details class="blue" data-header-exclude=""><summary><i class="fa-solid fa-chevron-right"></i>有向图的最短路问题 </summary>
              <div class="content">
              <p>在下图中，用点表示城市，现有A,B<del>1</del>,B<del>2</del>,C<del>1</del>,C<del>2</del>,C,<del>3</del>,D共 7 个城市。点与点之间的连线表示城市间有道路相连。连线旁的数字表示道路的长度现计划从城市4到城市D铺设一条天然气管道，请设计出最小长度管道铺设方案。</p><p><img lazyload="" src="/images/loading.svg" data-src="/images/%E5%9B%BE%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E5%8F%8A%E6%96%B9%E6%B3%95/%E4%B8%83%E4%B8%AA%E5%9F%8E%E5%B8%82%E9%97%B4%E7%9A%84%E8%BF%9E%E7%BA%BF%E5%9B%BE.png" alt="七个城市间的连线图"></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">cities/A,B1,B2,C1,C2,C3,D/;</span><br><span class="line">roads(cities,cities)/A B1,A B2,B1 C1,B1 C2,B1 C3,B2 C1,</span><br><span class="line">B2 C2,B2 C3,C1 D,C2 D,C3 D/:w,x;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">w=2 4 3 3 1 2 3 1 1 3 4;</span><br><span class="line">enddata</span><br><span class="line">n=@size(cities); !城市的个数;</span><br><span class="line">min=@sum(roads:w*x);</span><br><span class="line">@for(cities(i)|i #ne#1 #and# i #ne#n:</span><br><span class="line">@sum(roads(i,j):x(i,j))=@sum(roads(j,i):x(j,i)));</span><br><span class="line">@sum(roads(i,j)|i #eq#1:x(i,j))=1;</span><br><span class="line">@sum(roads(i,j)|j #eq#n:x(i,j))=1;</span><br><span class="line">end</span><br></pre></td></tr></table></figure></div>
              </div>
            </details>
<h5 id="无向"><a href="#无向" class="headerlink" title="无向"></a>无向</h5><details class="blue" data-header-exclude=""><summary><i class="fa-solid fa-chevron-right"></i>无向图的最短路问题 </summary>
              <div class="content">
              <p>下图中的最短路。</p><p><img lazyload="" src="/images/loading.svg" data-src="/images/%E5%9B%BE%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E5%8F%8A%E6%96%B9%E6%B3%95/%E8%B5%8B%E6%9D%83%E6%97%A0%E5%90%91%E5%9B%BE.png" alt="赋权无向图"></p><p>分析 上一例处理的问题属于有向图的最短路问题，本例是处理无向图的最短路问题，在处理方式上与有向图的最短路问题有一些差别，这里选择赋权邻接矩阵的方法编写LINGO程序。</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">cities/1..11/;</span><br><span class="line">roads(cities,cities):w,x;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">w=0;</span><br><span class="line">enddata</span><br><span class="line">calc:</span><br><span class="line">w(1,2)=2;w(1,3)=8;w(1,4)=1;</span><br><span class="line">w(2,3)=6;w(2,5)=1;</span><br><span class="line">w(3,4)=7;w(3,5)=5;w(3,6)=1;w(3,7)=2;</span><br><span class="line">w(4,7)=9;</span><br><span class="line">w(5,6)=3;w(5,8)=2;w(5,9)=9;</span><br><span class="line">w(6,7)=4;w(6,9)=6;</span><br><span class="line">w(7,9)=3;w(7,10)=1;</span><br><span class="line">w(8,9)=7;w(8,11)=9;</span><br><span class="line">w(9,10)=1;w(9,11)=2;w(10,11)=4;</span><br><span class="line">@for(roads(i,j):w(i,j)=w(i,j)+w(j,i));</span><br><span class="line">@for(roads(i,j):w(i,j)=@if(w(i,j) #eq# 0, 1000,w(i,j)));</span><br><span class="line">endcalc</span><br><span class="line">n=@size(cities); !城市的个数;</span><br><span class="line">min=@sum(roads:w*x);</span><br><span class="line">@for(cities(i)|i #ne#1 #and# i #ne# </span><br><span class="line">n:@sum(cities(j):x(i,j))=@sum(cities(j):x(j,i)));</span><br><span class="line">@sum(cities(j):x(1,j))=1;</span><br><span class="line">@sum(cities(j):x(j,1))=0; !不能回到顶点1; </span><br><span class="line">@sum(cities(j):x(j,n))=1;</span><br><span class="line">@for(roads:@bin(x));</span><br><span class="line">end</span><br></pre></td></tr></table></figure></div><p>与有向图相比较，在程序中只增加了一个语句@sum(cities(j):x(j,1))=0，即<br>从顶点 1 离开后，再不能回到该顶点。<br>求得的最短路径为 1→2→5→6→3→7→10→9→11，最短路径长度为 13。</p>
              </div>
            </details>



<h5 id="Floyd算法"><a href="#Floyd算法" class="headerlink" title="Floyd算法"></a>Floyd算法</h5><h6 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h6><p><img lazyload="" src="/images/loading.svg" data-src="/images/%E5%9B%BE%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E5%8F%8A%E6%96%B9%E6%B3%95/Floyd%E6%80%9D%E8%B7%AF.png" alt="Floyd思路"></p>
<p>A<del>k</del>(i,j)= min(A<del>k-1</del>(i,j),A<del>k-1</del>(i,k)+A<del>k-1</del>(k,j))</p>
<h6 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h6><p><img lazyload="" src="/images/loading.svg" data-src="C:\Users\22251\AppData\Roaming\Typora\typora-user-images\image-20230721170453764.png" alt="image-20230721170453764"></p>
<p>Floyd 算法的基本思想是递推产生一个矩阵序A<del>1</del>,···,A<del>k</del>,···,A<del>n</del>，其中矩阵A<del>k</del>,的第i行第j列元素A<del>k</del>(i,j)示从顶点v<del>i</del>到顶点v<del>j</del>;的路径上所经过的顶点序号不大于的最短路径长度。</p>
<p>计算时用迭代公式</p>
<p>​	A<del>k</del>(i,j)= min(A<del>k-1</del>(i,j),A<del>k-1</del>(i,k)+A<del>k-1</del>(k,j))</p>
<p>k是迭代次数，i,j,k =1,2,…,n。</p>
<p>最后，当 k=n 时，A<del>n</del>即是各顶点之间的最短通路值。</p>
<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>某出版社准备在某市两个区建立两个销售代理点向大学生售书，每个区大学生数量如图，每个销售代理点只能向本区和一个相邻区的大学生售书，问两个代理点建立在何处，才能使供应量最大？试建立图论模型求解。</p>
<p><img lazyload="" src="/images/loading.svg" data-src="/images/%E5%9B%BE%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E5%8F%8A%E6%96%B9%E6%B3%95/%E7%BB%83%E4%B9%A0.png" alt="Floyd思路"></p>
]]></content>
      <categories>
        <category>数模</category>
      </categories>
      <tags>
        <tag>数模</tag>
      </tags>
  </entry>
  <entry>
    <title>找亲和数</title>
    <url>/2023/03/21/%E6%89%BE%E4%BA%B2%E5%92%8C%E6%95%B0/</url>
    <content><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>如果整数A的全部因子（包括1，不包括A本身）之和等于B；且整数B的全部因子（包括1，不包括B本身）之和等于A，则A和B称为亲密数。求10000以内的亲密数。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>直接遍历到10000，每个数a找一次因子，计算因子和为b,再找b的因子，计算因子和是否等于a<br>跑肯定是能跑，但是这样未免也太过无聊，于是我在网上想找一下有没有什么好的算法研究一下</p>
<div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="code"><pre><span class="line">N=<span class="number">1e05</span>;                 <span class="comment">% 所取数范围</span></span><br><span class="line">fac_sum=<span class="built_in">zeros</span>();    </span><br><span class="line"><span class="keyword">for</span> A=<span class="number">1</span>:N               <span class="comment">% 被除数</span></span><br><span class="line">    fac_sum(A)=<span class="number">0</span>;       <span class="comment">% 所有因式和</span></span><br><span class="line">    <span class="keyword">for</span> x=<span class="number">1</span>:(A<span class="number">-1</span>)       <span class="comment">% 除数</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">mod</span>(A,x)==<span class="number">0</span>) </span><br><span class="line">            fac_sum(A)=fac_sum(A)+x;    <span class="comment">% 每个数所有真因式之和</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&#x27;%g范围内的亲和数:\n&#x27;</span>,N);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:N</span><br><span class="line">    B=fac_sum(<span class="built_in">i</span>);   </span><br><span class="line">    <span class="keyword">if</span> B&gt;<span class="number">0</span> &amp;&amp; B&lt;= N                     <span class="comment">% 使得数字B在数组的索引范围内</span></span><br><span class="line">        <span class="keyword">if</span> fac_sum(B) == <span class="built_in">i</span> &amp;&amp; (B~=<span class="built_in">i</span>)    <span class="comment">% 亲和数的条件，同时剔除本身相等情况</span></span><br><span class="line">            fprintf(<span class="string">&#x27;%g,%g\n&#x27;</span>,B,<span class="built_in">i</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div>
<p>然后看到了c语言的代码实现，细细观察了一下，感觉发现了Matlab的最大特点——矩阵！<br>如此的话，也怪不得数模需要用Matlab了<br>网上查了一下，发现Matlab就是“矩阵实验室”😓汗。。。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, i, n;</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">1</span>; a &lt; <span class="number">10000</span>; a++)</span><br><span class="line">    &#123;</span><br><span class="line">        b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= a / <span class="number">2</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a % i == <span class="number">0</span>)</span><br><span class="line">                b += i;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        n = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= b / <span class="number">2</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (b % i == <span class="number">0</span>)</span><br><span class="line">                n += i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (n == a &amp;&amp; a &lt; b)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;(%4d,%4d)\n&quot;</span>, a, b);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="头脑风暴"><a href="#头脑风暴" class="headerlink" title="头脑风暴"></a>头脑风暴</h2><p>上面Matlab的思路是直接一个a[]数组，a[i]放的就是第i个数的因数和<br>所以第一次for循环就是在做这个数组，做完之后我只要看a[i]与a[(a[i])]是否相等就能判断是不是亲和数<br>不过很容易想到的一个弊端：</p>
<ul>
<li>会出现重复比较的情况—— <strong>一对亲和数出现两次</strong> ，比如：<ul>
<li>220,284</li>
<li>284,220</li>
</ul>
</li>
</ul>
<p>目前解决办法只想到链表代替，找到一个之后立刻删除另外一个对应结点，但是只用链表显然无法做到立刻删除一个index为i的结点，或许加一个 <strong>黑名单</strong> ，每次比较之前判断在不在黑名单内？<br>但是这样有明显画蛇添足，还不如就让他多比较一次，因为本身亲和数就是相对于范围来说很少的(目前已经知道的有1000多对亲和数，而10000以内的只有5对，在100000以内有13对)，为了这少量的几次比较反而用更复杂的链表实在是。。。<br>不过貌似可以使用哈希表，嗯，非常可行，嗯对，可以。<br>突然想到这是Matlab啊，链表哈希表都没有！<br>唉，不考虑编程语言的话哈希表确实是比较完美的解决方案了，不过我貌似又忽略了使用哈希表本身也降低了程序的处理速度啊</p>
<p>如果你有更完美的方案，欢迎与我交流！</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次最大的收获是意识到了Matlab的一个重要特点，今后写Matlab一定要着重发挥矩阵的作用。</p>
<h3 id="解决了什么问题"><a href="#解决了什么问题" class="headerlink" title="解决了什么问题"></a>解决了什么问题</h3><ul>
<li>怎样寻找最大亲和数<ul>
<li>最大亲和数的标准</li>
<li>怎样实现，怎样不暴力地实现</li>
</ul>
</li>
</ul>
<h3 id="得到了什么结果"><a href="#得到了什么结果" class="headerlink" title="得到了什么结果"></a>得到了什么结果</h3><ul>
<li>寻找因数时快速减少运算量的标志—— <strong>x&#x2F;2</strong> </li>
<li>Matlab的重要特性—— <strong>矩阵</strong></li>
</ul>
<h3 id="形成了什么结论"><a href="#形成了什么结论" class="headerlink" title="形成了什么结论"></a>形成了什么结论</h3><p>想要最大发挥Matlab的特性，一定要活用矩阵</p>
]]></content>
      <categories>
        <category>Activity</category>
        <category>数模</category>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>数模</tag>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>地图投影</title>
    <url>/2023/03/14/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/</url>
    <content><![CDATA[<h2 id="地图投影基本概念介绍"><a href="#地图投影基本概念介绍" class="headerlink" title="地图投影基本概念介绍"></a>地图投影基本概念介绍</h2><h3 id="什么是地图学的数学基础？"><a href="#什么是地图学的数学基础？" class="headerlink" title="什么是地图学的数学基础？"></a>什么是地图学的数学基础？</h3><p>地图的数学基础，是指使地图上各种地理要素与相应的地面景物之间保持一定对应关系的经纬网、坐标网、大地控制点、比例尺等数学要素。</p>
<ul>
<li>两个矛盾：<ul>
<li>一个是大（详）与小（略）的矛盾。——比例尺</li>
<li>一个是球面与平面之间的矛盾。——经纬网、坐标网、大地控制点——<strong>地图投影</strong></li>
</ul>
</li>
</ul>
<h3 id="大地基准面"><a href="#大地基准面" class="headerlink" title="大地基准面"></a>大地基准面</h3><p>大地基准面（Datum）是利用特定椭球体对特定地区地球表面的逼近，椭球形态由椭球体参数确定。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-1-2.png"
                      alt="椭球体参数"
                ></p>
<h3 id="地理坐标系与投影坐标系"><a href="#地理坐标系与投影坐标系" class="headerlink" title="地理坐标系与投影坐标系"></a>地理坐标系与投影坐标系</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-1-3.png"
                      alt="地理坐标系与投影坐标系"
                ></p>
<h3 id="投影的实质和定义"><a href="#投影的实质和定义" class="headerlink" title="投影的实质和定义"></a>投影的实质和定义</h3><p>建立平面上的点（用平面直角坐标或极坐标表示）和地球表面上的点（用纬度和经度表示）之间的函数关系。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-1-4.png"
                      alt="投影的实质和定义"
                ></p>
<h3 id="我国常用地图投影"><a href="#我国常用地图投影" class="headerlink" title="我国常用地图投影"></a>我国常用地图投影</h3><h4 id="高斯-克吕格投影————横轴等角椭圆柱投影"><a href="#高斯-克吕格投影————横轴等角椭圆柱投影" class="headerlink" title="高斯-克吕格投影————横轴等角椭圆柱投影"></a>高斯-克吕格投影————横轴等角椭圆柱投影</h4><p><strong>应用:</strong> 我国基本比例尺地形图≥1:50万的地形图<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-1-5.png"
                      alt="高斯-克吕格投影"
                ></p>
<ul>
<li>中央经线上无长度变形，长度比等于1，其它经线上长度比大于1，长度变形为正</li>
<li>沿纬线方向，离中央经线越远，长度变形越大</li>
<li>沿经线方向，纬度越低，长度变形越大。</li>
<li>最大变形位于赤道与边纬的交点上，6度带最大长度变形为0.138%，最大面积变形为0.27%.</li>
</ul>
<h4 id="Lambert投影————双标准纬线正轴等角圆锥投影"><a href="#Lambert投影————双标准纬线正轴等角圆锥投影" class="headerlink" title="Lambert投影————双标准纬线正轴等角圆锥投影"></a>Lambert投影————双标准纬线正轴等角圆锥投影</h4><p><strong>应用:</strong> 我国新编1:100万地形图采用该投影<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-1-6.png"
                      alt="Lambert投影"
                ></p>
<ul>
<li>没有角度变形，等变形线与纬线一致</li>
<li>两条标准纬线上没有变形</li>
<li>同一经线上，两标准纬线外侧为正变形（长度比大于1），而内侧为负变形</li>
<li>同一纬线上，等经差的线段长度相等，两条纬线之间的经线长度处处相等</li>
</ul>
<h4 id="中国地图一般采用正轴等面积（Albers）或等角圆锥投影"><a href="#中国地图一般采用正轴等面积（Albers）或等角圆锥投影" class="headerlink" title="中国地图一般采用正轴等面积（Albers）或等角圆锥投影"></a>中国地图一般采用正轴等面积（Albers）或等角圆锥投影</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-1-7.png"
                      alt="中国地图"
                ><br><a class="link"   href="http://bzdt.ch.mnr.gov.cn/index.html" >http://bzdt.ch.mnr.gov.cn/index.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h4 id="本次实验总体目标"><a href="#本次实验总体目标" class="headerlink" title="本次实验总体目标"></a>本次实验总体目标</h4><ul>
<li>掌握地图投影的基本概念和地图投影判别的基本方法；</li>
<li>掌握ARCGIS地图投影定义、投影转换、投影参数设置的基本操作方法；</li>
<li>理解常用地图投影的数学原理，熟悉常用地图投影计算方法的编程实现过程。</li>
</ul>
<h2 id="地图投影判读实验"><a href="#地图投影判读实验" class="headerlink" title="地图投影判读实验"></a>地图投影判读实验</h2><h3 id=""><a href="#" class="headerlink" title=""></a><details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>实验目的 </summary>
              <div class='content'>
              <ul><li>掌握地图投影判读的基本方法</li><li>加深对地图投影的概念、投影变形性质等内容的理解</li><li>加强对常用地图投影经纬网形状变化特点的了解</li><li>能够快速判别出地图投影的类别和变形性质</li></ul>
              </div>
            </details></h3><h3 id="投影判读的基本方法"><a href="#投影判读的基本方法" class="headerlink" title="投影判读的基本方法"></a>投影判读的基本方法</h3><p>往往是针对正轴投影<br>这是<strong>正轴圆柱投影</strong>，它的经纬线分布的很规律，相互垂直相交<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-2-1.png"
                      alt="正轴圆柱投影"
                ><br>这是以极地伟投影范围，地极为投影中心的<strong>正轴方位投影</strong>  </p>
<p>对于方位投影来说，如何判别</p>
<div class="tabs" id="tab-plan"><ul class="nav-tabs"><li class="tab active"><a class="#plan-1">等距投影</a></li><li class="tab"><a class="#plan-2">等角投影</a></li><li class="tab"><a class="#plan-3">等面积投影</a></li><li class="tab"><a class="#plan-4">圆锥投影</a></li></ul><div class="tab-content"><div class="tab-pane active" id="plan-1"><ul>
<li>分布在等差纬线的经线段长度是否相等</li>
</ul></div><div class="tab-pane" id="plan-2"><ul>
<li>同样的也是看经线段，是否是是从极地到赤道逐渐变长的</li>
</ul></div><div class="tab-pane" id="plan-3"><p>如若图中逐渐变小，就是<strong>等面积</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-2-2.png"
                      alt="正轴方位投影"
                ></p></div><div class="tab-pane" id="plan-4"><p><del>像扇子</del><br>纬线是同心圆弧<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-2-3.png"
                      alt="圆锥投影"
                ></p></div></div></div>


<h3 id="常见投影的基本特征"><a href="#常见投影的基本特征" class="headerlink" title="常见投影的基本特征"></a>常见投影的基本特征</h3><p>每种投影有不同适用的区域，因为她的变形特点不一样嘛<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-2-4.png"
                      alt="常见投影的基本特征"
                ></p>
<a class="button  regular" href='https://malagis.com/map-projection-shape-characteristics-latitude-longitude.html' title='常见一些地图投影的经纬线形状特征'><i class='fa-solid fa-arrow-right'></i> 常见一些地图投影的经纬线形状特征</a>

<p>比如这个：</p>
<details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>彭纳投影 </summary>
              <div class='content'>
              <p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-2-5.png"
                      alt="彭纳投影"
                ></p><div class="note default"><p>它是一个伪圆锥投影</p></div><details class="green" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>特点 </summary>              <div class='content'>              <ul><li>中央经线为直线，其他经线为对称于中央经线的曲线</li><li>纬线与经线交叉的同心圆弧</li><li>中央经线上纬线间隔相等</li><li>常用于亚洲图、欧洲图</li></ul>              </div>            </details>
              </div>
            </details>


<p>只要纬线是同心圆弧，你就可以说他是一个圆锥投影，<em><strong>哪怕她长得像个桃心</strong></em></p>
<h3 id="地图投影判读作业"><a href="#地图投影判读作业" class="headerlink" title="地图投影判读作业"></a>地图投影判读作业</h3><details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>题目 </summary>
              <div class='content'>
              <p>（1）属正轴等积方位投影的是其中的哪一幅地图？沿其经纬线方向的变形特点如何？<br>（2）属正轴等距方位投影的是其中哪一幅地图？沿其经纬线方向的变形特点如何？<br>（3）属正轴等积圆锥投影的是其中哪一幅地图？沿其经纬线方向的变形特点如何？<br>（4）属正轴等角方位投影的是其中哪一幅地图？沿其经纬线方向的变形特点如何？<br>（5）属正轴等积圆柱投影的是其中哪一幅地图？沿其经纬线方向的变形特点如何？<br>（6）属墨卡托投影的是其中哪一幅地图？如果要在该投影上绘制澳大利亚的堪培拉（Canberra）到秘鲁的利马（Lima）的等角航线，应该如何绘制？沿着等角航线它们之间的距离是多少？</p><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-2-6.png"
                      alt="作业"
                ></p>
              </div>
            </details>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>答案 </summary>
              <div class='content'>
              <details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>（1）c </summary>              <div class='content'>              <p>经线：放射状直线，纬线：同心圆，中央经线上纬线间隔的变化：从两极向赤道逐渐减小</p>              </div>            </details><details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>（2）e </summary>              <div class='content'>              <p>经线：放射状直线，纬线：同心圆，中央经线上纬线间隔的变化：相等</p><p>Azimuthal Equidistant 等距方位投影<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-2-8.jpg"
                      alt="答案"
                ><br>等距方位投影可以保留距中心点的距离和方向。将地球上的所有点投影到一个平面上。虽然所有投影方法（赤道投影、极方位投影和斜轴投影）均可用，但使用频率最高的是极方位投影，这种投影会将所有经线和纬线划分为相等的部分，以保持等距离属性。<br>据说这种投影最初是埃及人绘制星图时使用的。</p>              </div>            </details><details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>（3）d </summary>              <div class='content'>              <p>经线：放射状直线，纬线：同心圆弧，中央经线上纬线间隔的变化：由地图中心向南北方向逐渐缩小</p>              </div>            </details><details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>（4）f </summary>              <div class='content'>              <p>经线：放射状直线，纬线：同心圆，中央经线上纬线间隔的变化：从两极向赤道逐渐增大</p>              </div>            </details><details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>（5）b </summary>              <div class='content'>              <p>经线：间隔相等的平行直线，纬线：与经线垂直的平行直线，中央经线上纬线间隔的变化：从赤道向两级逐渐增大</p><p>圆柱等积投影可将世界呈现为一个矩形，同时保持地图上的相对面积。瑞士数学家 Johann H.Lambert 于 1772 年首次描述了这种投影。自那以后许多年，出现了多种变体。该投影适合绘制赤道附近地区的大比例地图，且一般不建议用于绘制小比例（世界）地图。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/1-2-7.jpg"
                      alt="答案"
                ></p><details class="green" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>贝尔曼投影 </summary>              <div class='content'>              <p>Behrmann 贝尔曼投影<br>贝尔曼投影是圆柱等积地图投影的一种，其标准纬线设置为南北纬 30°。<br>由于其等积的属性,它可以高度压缩极地地区。</p>              </div>            </details>              </div>            </details><details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>（6）a </summary>              <div class='content'>              <p>经线：间隔相等的平行直线，纬线：与经线垂直的平行直线，中央经线上纬线间隔的变化：从赤道向两级逐渐增大</p><p>右键打开属性表<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/2-1-1.jpg"
                      alt="答案"
                ><br>双击这里可以聚焦<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/2-1-2.png"
                      alt="答案"
                ><br>按住ctrl在单机可以多选，这时再看大地图，两地已经被标识出来<br>使用测量工具<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/2-1-3.png"
                      alt="答案"
                ></p>              </div>            </details>
              </div>
            </details>

<div class="note info"><p><a class="button  regular" href='https://www.thepaper.cn/newsDetail_forward_10750264' title='25种地图投影类型'><i class='fa-solid fa-arrow-right'></i> 25种地图投影类型</a></p>
<p><a class="button  regular" href='https://pro.arcgis.com/zh-cn/pro-app/latest/help/mapping/properties/list-of-supported-map-projections.htm' title='ArcGISPro支持的地图投影'><i class='fa-solid fa-arrow-right'></i> ArcGISPro支持的地图投影</a></p>
</div>

<h2 id="ArcGIS中地图投影实验"><a href="#ArcGIS中地图投影实验" class="headerlink" title="ArcGIS中地图投影实验"></a>ArcGIS中地图投影实验</h2><h3 id="-1"><a href="#-1" class="headerlink" title=""></a><details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>实验目的 </summary>
              <div class='content'>
              <ul><li>了解ArcGIS中的地图数据组织和SHP数据格式</li><li>了解ArcGIS软件中对于空间参考的定义以及PRJ文件</li><li>理解ArcGIS中的动态投影</li><li>实践ArcGIS软件中的投影设置工具</li><li>实践ArcGIS软件中的投影变换工具</li></ul>
              </div>
            </details></h3><h3 id="ArcGIS地图数据模型与SHP数据格式"><a href="#ArcGIS地图数据模型与SHP数据格式" class="headerlink" title="ArcGIS地图数据模型与SHP数据格式"></a>ArcGIS地图数据模型与SHP数据格式</h3><p>.shp空间数据<br>.dbf属性数据<br>.sbx索引文件  </p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-2-1.png"
                      alt="格式"
                ></p>
<h3 id="PRJ文件的内容"><a href="#PRJ文件的内容" class="headerlink" title="PRJ文件的内容"></a>PRJ文件的内容</h3><p>把.prj用记事本打开<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-2-2.png"
                      alt="prj"
                ><br>对照图层坐标属性看一下<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-2-3.png"
                      alt="prj"
                ><br>可以看到这里图层的坐标系和数据框的坐标系是不同的，但是他仍然显示为墨卡托投影<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-2-4.png"
                      alt="prj"
                ><br>这是因为ArcGIS对数据显示的时候采用了<strong>动态投影</strong>的过程</p>
<h3 id="动态投影及其设置"><a href="#动态投影及其设置" class="headerlink" title="动态投影及其设置"></a>动态投影及其设置</h3><p>如果我们数据框采用了A坐标系统，而我们加进来的数据系统默认的不是A,那么ArcGIS会把后加进来的数据按照地图框的系统进行转换，所以我们放大缩小可以看到地图有“延迟”，这就是再一边转换一边显示，显示每一个点都是<strong>动态转换</strong>过来的</p>
<p>所以当我们对坐标系进行更改<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-2-5.png"
                      alt="更改坐标系"
                ><br>应用，是<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-2-6.png"
                      alt="更改坐标系"
                ><br>动态投影就会变成这样</p>
<div class="note-large blue"><div class="notel-title"><p>动态投影</p>
</div><div class="notel-content"><p>动态投影指，ArcMap中的地图数据框的空间参考</p>
<ul>
<li>默认为第一加载到当前工作区的那个文件的坐标系统</li>
<li>当加入的数据文件的坐标系与之不同时，ArcMap会自动做投影变换，把后加入的数据投影变换到当前坐标系统下显示，但此时数据文件所存储的数据和坐标参数并没有改变</li>
</ul>
</div></div>

<p>找到投影工具<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-4-1.png"
                      alt="更改坐标系"
                ><br>选择输出坐标系<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-4-2.png"
                      alt="更改坐标系"
                ></p>
<div class="note info"><p>具体位置 投影坐标系&#x2F;Gauss Kruger&#x2F;CGS2000&#x2F;CGCS2000 3 Degree GK CM 114E</p>
</div>

<p>这里下面的<em><strong>地理（坐标）变换 可选</strong></em>不可选是因为这里并不需要做地理坐标变换，假设输入输出之间地理坐标系也不相同，这里就需要做选择怎样转换。  </p>
<p><a href="#arcgis%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9D%90%E6%A0%87%E7%B3%BB">关于选择地理坐标转换</a></p>
<p>注意看，转换完毕之后的地图自动添加进工作空间了，但是可以发现转换前转换后却完全重叠了<br>这是因为转换后的地图添加进来之后进行了动态投影<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-4-3.png"
                      alt="更改坐标系"
                ></p>
<p>同样地很轻松就能做出转换成其他坐标系</p>
<h3 id="ArcGIS中的“定义投影”工具"><a href="#ArcGIS中的“定义投影”工具" class="headerlink" title="ArcGIS中的“定义投影”工具"></a>ArcGIS中的“定义投影”工具</h3><p>前面说了.prj文件<br>定义投影实际上就是在改变prj文件，但是仅仅改变了prj文件并没有改变数据对应的值，他肯定会出问题，所以我们一般不用<strong>定义投影</strong>工具，除非说这个地图文件本来就没有prj文件，我们恰好知道他的对应坐标系是什么<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-5-01.png"
                      alt="定义投影"
                ></p>
<h3 id="ArcGIS中的“投影-x2F-批量投影”工具"><a href="#ArcGIS中的“投影-x2F-批量投影”工具" class="headerlink" title="ArcGIS中的“投影&#x2F;批量投影”工具"></a>ArcGIS中的“投影&#x2F;批量投影”工具</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-6-01.png"
                      alt="批量投影"
                ></p>
<h3 id="地理坐标系及其转换"><a href="#地理坐标系及其转换" class="headerlink" title="地理坐标系及其转换"></a>地理坐标系及其转换</h3><p>前面在讲<a href="#%E5%A4%A7%E5%9C%B0%E5%9F%BA%E5%87%86%E9%9D%A2">大地基准</a>的时候我们说是<strong>不定</strong>的</p>
<details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>我们国家常用地理坐标系 </summary>
              <div class='content'>
              <ul><li>北京54</li><li>西安80</li><li>WGS84</li><li>CGCS2000坐标系</li><li>高德火星坐标系GCJ02</li><li>百度加密坐标系BD09</li></ul>
              </div>
            </details>

<p>他们都是应对不同的需要而建立的，总的来说分为两种</p>
<ul>
<li>地心基准面（Geocentric datums）</li>
<li>本地基准面（Local datums）</li>
</ul>
<p>我们之需要地理坐标转换是因为我们在不同的时期应不同的需要，产生了很多的地理坐标系，<br>这样不同的坐标系的大地基准可能都不一样，我们就需要把他们拿过来整合到一个系统里，这样我们就需要一套地理坐标转换的方法。</p>
<p>正如前面所说地理坐标系转换蛮简单的<br>只不过这里不是选<del>投影坐标系</del>，而是选<em><strong>地理坐标系</strong></em></p>
<p>你可以来试一下下面这两个</p>
<ul>
<li>CGCS2000转Beijing1954</li>
<li>Bejing1954转Xian1980</li>
</ul>
<details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>当你做到第二个北京54转西安80你可能就会发现有问题 </summary>
              <div class='content'>
              <p>这里会显示“未定义的地理（坐标）变换”<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-7-4.png"
                      alt="更改坐标系"
                ><br>像前面所说的，这里需要选择转换方式，但是我们并没有北京54转西安80的方法<br>这里我们就需要<strong>自定义坐标转换</strong><br>工具位置就在前面用的投影工具的下面<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-7-5.png"
                      alt="更改坐标系"
                ><br>方法我们就选择COORDINATE_Frame&#x2F;Position Vector（也就是七参数变换）</p><details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>七参数坐标转换原理（COORDINATE_FRAME） </summary>              <div class='content'>              <ul><li>如果原点相同，通过三次旋转，就可以两个坐标系重合；</li><li>如果原点不同，通过沿三个坐标轴的平移和旋转可以取得一致；</li><li>如果两个坐标系的尺度也不尽一致，就需要再增加一个尺度变化参数。</li></ul>              </div>            </details><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-7-6.png"
                      alt="更改坐标系"
                ></p>
              </div>
            </details>

<details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>ArcGIS中提供地理变换方法主要有这几种 </summary>
              <div class='content'>
              <ul><li>Geocentric_Translation</li><li>Molodensky</li><li>Molodensky_Abridged</li><li>Position_Vector</li><li>Coordinate_Frame</li><li>Molodensky_Badekas</li><li>NADCON</li><li>HARN</li><li>NTV2</li><li>Longitude_Rotation</li><li>Unit_Change</li><li>Geographic_2D_Offset<br>可使用“创建自定义地理变换（Creat Custom Geographic Transformation）”工具来创建转换方法</li></ul>
              </div>
            </details>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-7-02.png"
                      alt="三七参转换"
                ></p>
<h3 id="ArcGIS种其他投影和变换功能"><a href="#ArcGIS种其他投影和变换功能" class="headerlink" title="ArcGIS种其他投影和变换功能"></a>ArcGIS种其他投影和变换功能</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-8-01.png"
                      alt="三七参转换"
                ></p>
<ul>
<li><p><strong>转换坐标记法工具</strong>，用于将包含坐标数据的表格转换为点要素类（Feature Class），且支持多种坐标系下的不同记法</p>
</li>
<li><p><strong>栅格数据的投影变换</strong>指将栅格数据集从一种地图投影转换到另一种地图投影，与矢量数据的投影变换原理本质相同。</p>
</li>
<li><p><strong>栅格数据变换</strong>是指对数据的平移、扭曲、旋转、翻转、比例、形状、位置的改变等。</p>
</li>
</ul>
<h3 id="投影变换小结"><a href="#投影变换小结" class="headerlink" title="投影变换小结"></a>投影变换小结</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/3-8-02.png"
                      alt="三七参转换"
                ></p>
<details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>变换形式 </summary>
              <div class='content'>
              <ul><li>地理坐标之间变换</li><li>平面坐标之间变换</li><li>投影</li><li>逆投影</li></ul>
              </div>
            </details>
<details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>变换方法 </summary>
              <div class='content'>
              <ul><li>解析变换</li><li>数值变换</li><li>数值-解析变换法</li><li>七参数变换</li></ul>
              </div>
            </details>
<h3 id="ArcGIS中自定义坐标系"><a href="#ArcGIS中自定义坐标系" class="headerlink" title="ArcGIS中自定义坐标系"></a>ArcGIS中自定义坐标系</h3><h2 id="地图投影计算方法实验"><a href="#地图投影计算方法实验" class="headerlink" title="地图投影计算方法实验"></a>地图投影计算方法实验</h2><h3 id="-2"><a href="#-2" class="headerlink" title=""></a><details class="gray" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>实验目的 </summary>
              <div class='content'>
              <ul><li>理解常见投影的数学原理</li><li>掌握投影计算方法各种各待定参数的确定方法</li><li>了解高斯-克吕格投影的计算机程序实现方法</li><li>了解Lambert投影的计算机程序实现方法</li><li>了解地图投影的数值变换的计算机程序实现方法</li></ul>
              </div>
            </details></h3><h3 id="编程环境配置"><a href="#编程环境配置" class="headerlink" title="编程环境配置"></a>编程环境配置</h3><hr>
<h2 id="本章所采用的实习地图数据均来源于“全国地理信息资源目录服务系统”（https-www-webmap-cn-main-do-method-index）数据格式为Shapefile，示例程序采用的编程语言为Python-3，-因此实验中需要采用Python第三方开源库GDAL（https-gdal-org-）对实习中地图数据进行读写。同时也用到了Numpy、Scipy，进行各种数学计算。"><a href="#本章所采用的实习地图数据均来源于“全国地理信息资源目录服务系统”（https-www-webmap-cn-main-do-method-index）数据格式为Shapefile，示例程序采用的编程语言为Python-3，-因此实验中需要采用Python第三方开源库GDAL（https-gdal-org-）对实习中地图数据进行读写。同时也用到了Numpy、Scipy，进行各种数学计算。" class="headerlink" title="本章所采用的实习地图数据均来源于“全国地理信息资源目录服务系统”（https://www.webmap.cn/main.do?method=index）数据格式为Shapefile，示例程序采用的编程语言为Python 3， 因此实验中需要采用Python第三方开源库GDAL（https://gdal.org/）对实习中地图数据进行读写。同时也用到了Numpy、Scipy，进行各种数学计算。"></a>本章所采用的实习地图数据均来源于“全国地理信息资源目录服务系统”（<a class="link"   href="https://www.webmap.cn/main.do?method=index%EF%BC%89%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%E4%B8%BAShapefile%EF%BC%8C%E7%A4%BA%E4%BE%8B%E7%A8%8B%E5%BA%8F%E9%87%87%E7%94%A8%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%B8%BAPython" >https://www.webmap.cn/main.do?method=index）数据格式为Shapefile，示例程序采用的编程语言为Python <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 3， 因此实验中需要采用Python第三方开源库GDAL（<a class="link"   href="https://gdal.org/%EF%BC%89%E5%AF%B9%E5%AE%9E%E4%B9%A0%E4%B8%AD%E5%9C%B0%E5%9B%BE%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E8%AF%BB%E5%86%99%E3%80%82%E5%90%8C%E6%97%B6%E4%B9%9F%E7%94%A8%E5%88%B0%E4%BA%86Numpy%E3%80%81Scipy%EF%BC%8C%E8%BF%9B%E8%A1%8C%E5%90%84%E7%A7%8D%E6%95%B0%E5%AD%A6%E8%AE%A1%E7%AE%97%E3%80%82" >https://gdal.org/）对实习中地图数据进行读写。同时也用到了Numpy、Scipy，进行各种数学计算。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h2><a class="button  regular" href='https://www.lfd.uci.edu/~gohlke/pythonlibs/#gdal' title='GDAL本地安装包的下载路径：'><i class='fa-solid fa-download'></i> GDAL本地安装包的下载路径：</a>
<p>需要根据自己python的版本和操作系统环境下载对应的版本</p>
<p>安装命令：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> [GDAL whl文件所在目录]</span><br><span class="line">pip install GDAL-<span class="number">3</span>.<span class="number">4</span>.<span class="number">1</span>-cp37-cp37m-win_amd64.whl</span><br></pre></td></tr></table></figure></div>

<h3 id="高斯-克吕格投影公式"><a href="#高斯-克吕格投影公式" class="headerlink" title="高斯-克吕格投影公式"></a>高斯-克吕格投影公式</h3><h3 id="高斯-克吕格投影计算核心代码"><a href="#高斯-克吕格投影计算核心代码" class="headerlink" title="高斯-克吕格投影计算核心代码"></a>高斯-克吕格投影计算核心代码</h3><h3 id="Lambert投影计算公式"><a href="#Lambert投影计算公式" class="headerlink" title="Lambert投影计算公式"></a>Lambert投影计算公式</h3><h3 id="地图投影的数值变换计算公式"><a href="#地图投影的数值变换计算公式" class="headerlink" title="地图投影的数值变换计算公式"></a>地图投影的数值变换计算公式</h3><h3 id="程序结构说明"><a href="#程序结构说明" class="headerlink" title="程序结构说明"></a>程序结构说明</h3><h3 id="投影计算程序测试"><a href="#投影计算程序测试" class="headerlink" title="投影计算程序测试"></a>投影计算程序测试</h3><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p><a class="link"   href="https://max.book118.com/html/2017/0428/102896080.shtm" >https://max.book118.com/html/2017/0428/102896080.shtm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>GIS</category>
        <category>ArcGIS</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
      </tags>
  </entry>
  <entry>
    <title>江汉大学vlog</title>
    <url>/2023/04/07/%E6%B1%9F%E6%B1%89%E5%A4%A7%E5%AD%A6vlog/</url>
    <content><![CDATA[<p>昨天跟朋友去看超级马里奥兄弟大电影，他貌似很喜欢马里奥,今天的衣服上都有那个小蘑菇人。</p>
<p>决定自行车骑去电影院看</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/江汉大学vlog/出发.jpg"
                      alt="出发" width="30%" height="30%"
                >

<p>路上风景还蛮好的<br>经过一个国风小区，好牛<br><video src="/videos/江汉大学vlog/国风小区.mp4" width="800px" height="600px" controls="controls"></video></p>
<p>还看到一个夏威夷小区，好好看，很有情书中和死去男主同名的女生的住处一样的感觉。</p>
<p>经过一个桥，休息了一会儿，看下面的人钓鱼<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/江汉大学vlog/钓鱼1.jpg"
                      alt="钓鱼1" width="70%" height="70%"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/江汉大学vlog/钓鱼2.jpg"
                      alt="钓鱼2" width="70%" height="70%"
                ><br>突然发现这个票上的电影院名字不对？<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/江汉大学vlog/后脑勺.jpg"
                      alt="后脑勺" width="70%" height="70%"
                ><br>我们去的是大地。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/江汉大学vlog/电影票.jpg"
                      alt="电影票" width="70%" height="70%"
                ><br>看完了之后发现附近江汉大学很近啊，出于某种心理，我们决定混进去逛逛。</p>
<div class="note-large blue"><div class="notel-title"><p>vlog</p>
</div><div class="notel-content"><p>视频发布在了b站  省的往网站上整hhh</p>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
    <iframe src="//player.bilibili.com/player.html?aid=909599040&bvid=BV1EM4y1m7MX&cid=1084566002&page=1&danmaku=0&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>
</div></div></div>

<div class="note-large green"><div class="notel-title"><p>想要实现向上面这样的bi站嵌入视频？</p>
</div><div class="notel-content"><p><a class="button  large center" href='https://blog.nofated.win/2020/09/21/bilibili-player/' title='B 站外嵌视频播放器防踩坑'><i class='fa-solid fa-arrow-right'></i> B 站外嵌视频播放器防踩坑</a></p>
</div></div>

<p>回来的时候下雨了，还碰到了校友，也是骑行hhh<br>一边淋着雨，一边在马路上狂飙是真的爽hhh，可惜，要是我带了耳机就好了，带上耳机听着音乐，想想都…啧啧啧<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/江汉大学vlog/返回.jpg"
                      alt="返回" width="30%" height="30%"
                ></p>
]]></content>
      <categories>
        <category>Vlogs</category>
      </categories>
      <tags>
        <tag>Vlog</tag>
      </tags>
  </entry>
  <entry>
    <title>爱欲闪光</title>
    <url>/2023/01/24/%E7%88%B1%E6%AC%B2%E9%97%AA%E5%85%89/</url>
    <content><![CDATA[<h1 id="诗"><a href="#诗" class="headerlink" title="诗"></a>诗</h1><p>找到自己以前写的一些东西，暂时没有更好的地方放，先做一个单独的文章，时间即为随笔写的时间</p>
<a class="button  regular" href='https://mp.weixin.qq.com/s/az5iGkFZBqmMMTTHgbzrWg' title='【现代诗】我想和你虚度时光-李元胜'><i class='fa-brands fa-weixin'></i> 【现代诗】我想和你虚度时光-李元胜</a>

<p><strong>我想和你虚度时光</strong></p>
<p><strong>[现代]</strong> <em><strong>李元胜</strong></em></p>
<p>我想和你虚度时光，比如低头看鱼<br>比如把茶杯留在桌子上，离开<br>浪费它们好看的阴影</p>
<p>我还想连落日一起浪费，比如散步<br>一直消磨到星光满天</p>
<p>我还要浪费风起的时候<br>坐在走廊发呆，直到你眼中乌云<br>全部被吹到窗外</p>
<p>我已经虚度了世界，它经过我<br>疲倦，又像从未被爱过<br>但是明天我还要这样，虚度</p>
<p>满目的花草，生活应该像它们一样美好<br>一样无意义，像被虚度的电影<br>那些绝望的爱和赴死<br>为我们带来短暂的沉默</p>
<p><strong>我想和你互相浪费</strong><br><strong>一起虚度短的沉默，长的无意义</strong><br><strong>一起消磨精致而苍老的宇宙</strong></p>
<h1 id="Essay"><a href="#Essay" class="headerlink" title="Essay"></a>Essay</h1><p>爱欲太过浓郁，无限制，把你淹没在虚无的海，海面翻卷的浪花如此美丽，让你如痴如醉，甘愿为了梦中泡影走向虚无。但是谁又能说这是无意义的呢，我认为是，无穷的时间维度带来的是无尽的思考，追寻虚无的意义无论对于实体甚至是它，都毫无意义，我只能是一只扑火的蛾子，在无尽的海洋上寻求理想的火焰。在穷尽自己须臾的一生之前。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E7%88%B1%E6%AC%B2%E9%97%AA%E5%85%89/1.png"
                     
                ></p>
<p>精美华丽的文字抓取了一段华丽的爱欲闪光，它的信徒如此沉迷，踏上追寻的险途，不知全貌的人也被这一瞬的闪光震撼，是啊，在无尽的维度下，存在却近乎不存在，不是实体却有无尽载体，这一瞬间爆发的美感的确是无与伦比的。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E7%88%B1%E6%AC%B2%E9%97%AA%E5%85%89/2.png"
                     
                ></p>
<p>我看见了，将自己的感受再次投射，只是希望将这一瞬给我的感触稍稍延长。</p>
]]></content>
      <categories>
        <category>essay</category>
      </categories>
      <tags>
        <tag>essay</tag>
        <tag>随想</tag>
      </tags>
  </entry>
  <entry>
    <title>获取城市路网数据</title>
    <url>/2023/04/15/%E8%8E%B7%E5%8F%96%E5%9F%8E%E5%B8%82%E8%B7%AF%E7%BD%91%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="官方下载"><a href="#官方下载" class="headerlink" title="官方下载"></a>官方下载</h1><p><a class="link"   href="http://data.wuhan.gov.cn/index.html" >武汉市公共数据开放平台 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>获取武汉市交通路网和车流数据（.json），用ArcGIS自带的“json转要素”工具将其转换为.shp格式；</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E8%8E%B7%E5%8F%96%E5%9F%8E%E5%B8%82%E8%B7%AF%E7%BD%91%E6%95%B0%E6%8D%AE/1.png"
                     
                ></p>
<h1 id="Openstreetmap"><a href="#Openstreetmap" class="headerlink" title="Openstreetmap"></a>Openstreetmap</h1><p>这里仅作介绍它的几种方法，具体怎么使用还请点击下方链接自行浏览</p>
<a class="button  large center" href='https://zhuanlan.zhihu.com/p/141740446' title='从Openstreetmap获取路网数据并制作shapefile图层'><i class='fa-solid fa-arrow-right'></i> 从Openstreetmap获取路网数据并制作shapefile图层</a>

<h2 id="简单导出"><a href="#简单导出" class="headerlink" title="简单导出"></a>简单导出</h2><h2 id="Overpass-API"><a href="#Overpass-API" class="headerlink" title="Overpass API"></a>Overpass API</h2><h2 id="OSM星球"><a href="#OSM星球" class="headerlink" title="OSM星球"></a>OSM星球</h2><h2 id="Geofabrik下载"><a href="#Geofabrik下载" class="headerlink" title="Geofabrik下载"></a>Geofabrik下载</h2><h2 id="Query-法"><a href="#Query-法" class="headerlink" title="Query 法"></a>Query 法</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">&lt;osm-script&gt;</span><br><span class="line">  &lt;query type=<span class="string">&quot;relation&quot;</span>&gt;</span><br><span class="line">    &lt;has-kv k=<span class="string">&quot;boundary&quot;</span> v=<span class="string">&quot;administrative&quot;</span>/&gt;</span><br><span class="line">	&lt;has-kv k=<span class="string">&quot;name:zh&quot;</span> v=<span class="string">&quot;郑州市&quot;</span>/&gt;</span><br><span class="line">  &lt;/query&gt;</span><br><span class="line">  &lt;print/&gt;&lt;/osm-script&gt;</span><br></pre></td></tr></table></figure></div>



<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">&lt;osm-script timeout=<span class="string">&quot;1800&quot;</span> element-limit=<span class="string">&quot;100000000&quot;</span>&gt;</span><br><span class="line">  &lt;union&gt;</span><br><span class="line">    &lt;area-query ref=<span class="string">&quot;3603283765&quot;</span>/&gt;</span><br><span class="line">    &lt;recurse type=<span class="string">&quot;node-relation&quot;</span> into=<span class="string">&quot;rels&quot;</span>/&gt;</span><br><span class="line">    &lt;recurse type=<span class="string">&quot;node-way&quot;</span>/&gt;</span><br><span class="line">    &lt;recurse type=<span class="string">&quot;way-relation&quot;</span>/&gt;</span><br><span class="line">  &lt;/union&gt;</span><br><span class="line">  &lt;union&gt;</span><br><span class="line">    &lt;item/&gt;</span><br><span class="line">    &lt;recurse type=<span class="string">&quot;way-node&quot;</span>/&gt;</span><br><span class="line">  &lt;/union&gt;</span><br><span class="line">  &lt;print mode=<span class="string">&quot;body&quot;</span>/&gt;</span><br><span class="line">&lt;/osm-script&gt;</span><br></pre></td></tr></table></figure></div>
<p>突发奇想去问了一下new bing，我只能说，牛！<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E8%8E%B7%E5%8F%96%E5%9F%8E%E5%B8%82%E8%B7%AF%E7%BD%91%E6%95%B0%E6%8D%AE/2.png"
                     
                ></p>
 <details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>new bing给的几个地址 </summary>
              <div class='content'>
              <ul><li>city roads<ul><li><a class="link"   href="https://zhuanlan.zhihu.com/p/122501501" >https://zhuanlan.zhihu.com/p/122501501 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li><li><a class="link"   href="https://zhuanlan.zhihu.com/p/353599311" >https://zhuanlan.zhihu.com/p/353599311 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul></li><li>OpenStreetMap<ul><li><a class="link"   href="https://zhuanlan.zhihu.com/p/453816932" >https://zhuanlan.zhihu.com/p/453816932 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul></li><li>SEDAC<ul><li><a class="link"   href="https://zhuanlan.zhihu.com/p/453816932" >https://zhuanlan.zhihu.com/p/453816932 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul></li></ul>
              </div>
            </details>

<h1 id="City-Roads"><a href="#City-Roads" class="headerlink" title="City Roads"></a>City Roads</h1><p><a class="link"   href="https://anvaka.github.io/city-roads/" >Draw all roads in a city at once (anvaka.github.io) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>不过这个导出图片只能导出当前屏幕上的路网啊，鸡肋鸡肋，唉~</p>
 <details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>导出的几张图片(武汉) </summary>
              <div class='content'>
              <p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E8%8E%B7%E5%8F%96%E5%9F%8E%E5%B8%82%E8%B7%AF%E7%BD%91%E6%95%B0%E6%8D%AE/3.png"
                     
                ></p><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E8%8E%B7%E5%8F%96%E5%9F%8E%E5%B8%82%E8%B7%AF%E7%BD%91%E6%95%B0%E6%8D%AE/4.png"
                     
                ></p><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/%E8%8E%B7%E5%8F%96%E5%9F%8E%E5%B8%82%E8%B7%AF%E7%BD%91%E6%95%B0%E6%8D%AE/5.png"
                     
                ></p>
              </div>
            </details>

<h1 id="SEDAC"><a href="#SEDAC" class="headerlink" title="SEDAC"></a>SEDAC</h1><p>new bing给的SEDAC链接里面已经写了比较详细的介绍与教程，不再赘述。</p>
]]></content>
      <categories>
        <category>Tools</category>
        <category>GIS</category>
        <category>ArcGIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
</search>
